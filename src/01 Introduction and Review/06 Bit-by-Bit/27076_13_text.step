{"id": "122765", "block": {"feedback_correct": "", "name": "text", "feedback_wrong": "", "text": "<p>Note that, previously, we specified the datatype <span class=\"wysiwyg-font-tt\">unsigned char</span> to represent a byte in C++. In many programming languages (such as in C++), datatypes can be either <i>signed</i> or <i>unsigned</i>. In all of the previous examples in this lesson, we exclusively dealt with <i>unsigned</i> values: the smallest value is 0, and all other values are positive. For example, in C++, an <span class=\"wysiwyg-font-tt\">unsigned int</span> is 4 bytes (i.e., 32 bits), meaning the smallest possible value is 00000000 00000000 00000000 00000000 (which has a value of 0), and the largest possible value is 11111111 11111111 11111111 11111111 (which has a value of 2\u00b3\u00b2\u20131). In other words, with an <i>unsigned</i> datatype, all of the bits are used to represent <i>magnitude</i> of the number.</p><p>In a <i>signed</i> datatype, one bit is reserved to represent the <i>sign</i> of the number (typically, 0 = positive and 1 = negative), and the remaining bits represent the <i>magnitude</i> of the number. Typically, the \"sign bit\" is the left-most bit of the number (as it is in C++). Because one of the bits is reserved to represent the <i>sign</i> of the number, if a given signed datatype has a size of <i>n</i> bits, the smallest value it can hold is -2\u207f\u207b\u00b9 and the largest value it can hold is 2\u207f\u207b\u00b9\u20131. For example, in C++, a <span class=\"wysiwyg-font-tt\">signed int</span> is 4 bytes (i.e., 32 bits, just like an <span class=\"wysiwyg-font-tt\">unsigned int</span>), but because the leftmost bit represents the <i>sign</i> of the number, the remaining 31 bits are used to represent <i>magnitude</i>, meaning the smallest value that can be represented is -2\u00b3\u00b9 and the largest value that can be represented is 2\u00b3\u00b9\u20131.</p><p>Depending on the programming language, performing bitwise operations on a signed datatype performs the given operation on the <i>n</i>\u20131 <i>magnitude</i> bits without modifying the\u00a0<i>sign</i> bit (such that the sign of the number does not change). As a result, programming languages that have this feature often have signed\u00a0<i>and</i> unsigned versions of each of the bitwise operations. In general, be wary when performing bitwise operations on a signed datatype, and be sure to reference the relevant documentation to see how the bitwise operations work on signed datatypes in the language you are using.</p>", "subtitle_files": [], "source": null, "animation": null, "video": null, "tests_archive": null, "options": {}, "subtitles": {}}, "time": "2017-06-08T22:31:01.046018"}