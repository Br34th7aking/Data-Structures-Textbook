{"id": "96219", "block": {"feedback_correct": "", "name": "text", "feedback_wrong": "", "text": "<p>Git is a relatively unique distributed VCS in that it treats versions as \"snapshots\" of the repository filesystem, not as a list of file-based changes. From the official Git website:</p><p><i>\"Every time you commit, or save the state of your project in Git, it basically takes a picture of what all your files look like at that moment and stores a reference to that snapshot. To be efficient, if files have not changed, Git doesn\u2019t store the file again, just a link to the previous identical file it has already stored. Git thinks about its data more like a <b>stream of snapshots</b>.\"</i><br></p><p><img height=\"260\" width=\"684\" alt=\"\" src=\"https://ucarecdn.com/0d21af72-4b4d-4f74-a7e9-7ec59ea800cf/\"></p><p>In general, the Git workflow is as follows:</p><p></p><ol><li>Do a <b><span class=\"wysiwyg-color-green\">clone</span></b> (clones the remote repository to your local machine)</li><li>Modify the files in your working directory</li><li>Stage the files (adds snapshots of them to your staging area)</li><li>Do a <b><span class=\"wysiwyg-color-blue\">commit</span></b> (takes the files as they are in the staging area and stores that snapshot permanently to your Git directory)</li><li>Do a <b><span class=\"wysiwyg-color-purple\">push</span></b> (upload the changes you made locally to the remote repository)</li></ol><p>For more extensive information about Git, be sure to read the <a rel=\"nofollow\" href=\"https://git-scm.com/book/en/v2\">official Pro Git book</a>.<br></p><p></p>", "subtitle_files": [], "source": null, "animation": null, "video": null, "tests_archive": null, "options": {}, "subtitles": {}}, "time": "2017-01-05T20:07:02.046627"}