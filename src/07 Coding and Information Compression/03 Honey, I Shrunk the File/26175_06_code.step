{"id": "96574", "block": {"feedback_correct": "", "name": "code", "feedback_wrong": "", "text": "<p></p><p><b><span class=\"wysiwyg-color-green\">Code Challenge:</span> Counting Symbol Frequencies in a Message<br></b></p><p>In this challenge, you will be given a randomly-generated <span class=\"wysiwyg-font-tt\">string</span> object. Your task will be to create an array of integers (named <span class=\"wysiwyg-font-tt\">counts</span>) of length 256, where <span class=\"wysiwyg-font-tt\">counts[i]</span> is the number of times the <i>i</i>\ufeff-th ASCII symbol appeared in the input <span class=\"wysiwyg-font-tt\">string</span>.</p><p></p><p></p>", "subtitle_files": [], "source": {"execution_time_limit": 5, "code": "import random,sys\n\ndef generate_string(N):\n    return ''.join([random.choice(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") for _ in range(N)])\n\ndef generate():\n    tests = [\n             'AAAAABBAHHBCBGCCC',\n             \n             generate_string(10000)\n            ]\n    return tests\n\n\ndef solve(dataset):\n    count = [0 for _ in range(256)]\n    for c in dataset:\n        count[ord(c)] += 1\n    return ' '.join([str(i) for i in count])\n\n\ndef check(reply, clue):\n    if sum([int(i) for i in reply.split()]) == 0:\n        return 0, \"You're returning a count of 0 for all symbols.\"\n    reply = reply.split()\n    clue = clue.split()\n    if len(reply) != 256:\n        return 0, \"You are not returning an array of length 256.\" \n    if reply == clue:\n        return 1\n    else:\n        return 0, \"Your code's output does not match the expected output\"", "samples_count": 1, "execution_memory_limit": 256, "manual_memory_limits": [], "templates_data": "::c++11\n::header\n#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\n::code\nvector<int> counts(string input) {\n    vector<int> out (256,0); // initialize a vector of length 256 with all 0's\n    /* YOUR CODE HERE */\n    return out;\n}\n\n::footer\nint main() {\n    string line;\n    getline(cin, line);\n    vector<int> c = counts(line);\n    for(int i : c) {\n        cout << i << \" \";\n    }\n    return 0;\n}", "is_time_limit_scaled": true, "is_memory_limit_scaled": true, "manual_time_limits": [], "test_archive": []}, "animation": null, "video": null, "tests_archive": "/api/step-sources/96574/tests", "options": {"execution_time_limit": 5, "execution_memory_limit": 256, "limits": {"c++11": {"memory": 256, "time": 5}}, "samples": [["AAAAABBAHHBCBGCCC", "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 4 4 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"]], "code_templates": {"c++11": "vector<int> counts(string input) {\n    vector<int> out (256,0); // initialize a vector of length 256 with all 0's\n    /* YOUR CODE HERE */\n    return out;\n}"}}, "subtitles": {}}, "time": "2017-02-14T23:21:42.228876"}