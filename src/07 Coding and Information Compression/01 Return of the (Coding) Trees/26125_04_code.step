{"id": "96248", "block": {"feedback_correct": "", "name": "code", "feedback_wrong": "", "text": "<p><b><span class=\"wysiwyg-color-green\">CODE CHALLENGE:</span> Encoding a Message Using a Coding Scheme</b></p><p>We will be using the same trivial example as the previous step, where we have the following symbol mappings:</p><p></p><ul><li><span class=\"wysiwyg-font-tt\"><b><span class=\"wysiwyg-color-green\">A</span></b></span><b><span class=\"wysiwyg-color-green\">\u00a0\u2194 </span></b><span class=\"wysiwyg-font-tt\"><b><span class=\"wysiwyg-color-green\">00</span></b></span></li><li><span class=\"wysiwyg-font-tt\"><b><span class=\"wysiwyg-color-blue\">C</span></b></span><b><span class=\"wysiwyg-color-blue\">\u00a0\u2194 </span></b><span class=\"wysiwyg-font-tt\"><b><span class=\"wysiwyg-color-blue\">01</span></b></span></li><li><span class=\"wysiwyg-font-tt\"><b><span class=\"wysiwyg-color-purple\">G</span></b></span><b><span class=\"wysiwyg-color-purple\">\u00a0\u2194 </span></b><span class=\"wysiwyg-font-tt\"><b><span class=\"wysiwyg-color-purple\">10</span></b></span></li><li><span class=\"wysiwyg-font-tt\"><b><span class=\"wysiwyg-color-red\">T</span></b></span><b><span class=\"wysiwyg-color-red\">\u00a0\u2194 </span></b><span class=\"wysiwyg-font-tt\"><b><span class=\"wysiwyg-color-red\">11</span></b></span></li></ul><p>Given a string of A's, C's, G's, and T's, encode the message via the above mapping and print out the resulting encoded message to standard output.</p><p></p>", "subtitle_files": [], "source": {"execution_time_limit": 5, "code": "import random\n\ndef generate_DNA(N):\n    return ''.join(random.choice(\"ACGT\") for _ in range(N))\n\ndef generate():\n    tests = [\n             'ACGT'\n            ]\n    tests += [generate_DNA(100) for _ in range(10)]\n    return tests\n\n\ndef solve(dataset):\n    code = {'A':'00', 'C':'01', 'G':'10', 'T':'11'}\n    return ''.join([code[c] for c in dataset.strip()])\n\n\ndef check(reply, clue):\n    if len(reply) == 0:\n        return 0, \"You didn't output anything. Are you sure you're outputting to cout?\"\n    reply = reply.strip()\n    clue = clue.strip()\n    if reply == clue:\n        return 1\n    else:\n        return 0, (\"Your code's output does not match the expected output\\n\\nCORRECT OUTPUT:\\n\" + clue + \"\\n\\nYOUR OUTPUT:\\n\" + reply)", "samples_count": 1, "execution_memory_limit": 256, "manual_memory_limits": [], "templates_data": "::c++11\n::header\n#include <iostream>\nusing namespace std;\n\n::code\nvoid encodeString(string message) {\n    // YOUR CODE HERE\n}\n\n\n::footer\nint main() {\n  string s;\n  getline(cin,s);\n  encodeString(s);\n  return 0;\n}", "is_memory_limit_scaled": true, "is_time_limit_scaled": true, "manual_time_limits": [], "test_archive": []}, "animation": null, "video": null, "tests_archive": "/api/step-sources/96248/tests", "options": {"execution_time_limit": 5, "execution_memory_limit": 256, "code_templates": {"c++11": "void encodeString(string message) {\n    // YOUR CODE HERE\n}"}, "limits": {"c++11": {"memory": 256, "time": 5}}, "samples": [["ACGT", "00011011"]]}, "subtitles": {}}, "time": "2017-06-08T22:39:21.182036"}