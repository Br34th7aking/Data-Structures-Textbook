{"id": "122899", "block": {"feedback_correct": "", "name": "code", "feedback_wrong": "", "text": "<p><b><span class=\"wysiwyg-color-green\">Code Challenge:</span> Extracting the\u00a0<i>n</i>th Bit From the Right</b></p><p>You will need to fill in the body of <span class=\"wysiwyg-font-tt\">extractBit()</span>. The input will be a byte (i.e., 8 bits) <span class=\"wysiwyg-font-tt\">input</span>, and an integer <span class=\"wysiwyg-font-tt\">n</span>, and you will need to return the <span class=\"wysiwyg-font-tt\">n</span>-th bit of <span class=\"wysiwyg-font-tt\">input</span> (0-based counting from the right)\u00a0(either a 1 or a 0).</p><p>For example, if <span class=\"wysiwyg-font-tt\">input</span> is 247 (i.e., 1111<b>0</b>111) and <span class=\"wysiwyg-font-tt\">n</span> is 3, the result would be <b>0</b>.</p>", "subtitle_files": [], "source": {"execution_time_limit": 5, "code": "import random\n\ndef generate():\n    num_tests = 10\n    tests = [('247 3',('247 3',solve('247 3')))]\n    for test in range(num_tests):\n        n = str(random.randint(0,255))\n        b = str(random.randint(0,7))\n        t = str(n) + ' ' + str(b)\n        tests.append((t,(t,solve(t))))\n    return tests\n\n\ndef solve(dataset):\n    byte,n = dataset.split(' ')\n    byte = int(byte)\n    n = int(n)\n    return str((byte >> n) & 1)\n\n\ndef check(reply, clue):\n    test = clue[0]\n    clue = clue[1]\n    if int(reply) == int(clue):\n        return 1\n    else:\n        return 0, \"Wrong answer\\nInput:\\n\" + test + \"\\nYour output:\\n\" + reply + \"\\nCorrect output:\\n\" + clue", "samples_count": 1, "execution_memory_limit": 256, "manual_memory_limits": [], "templates_data": "::c++11\n::header\n#include <iostream>\n#include <set>\n#include <string>\nusing namespace std;\n\nunsigned int extractBit(unsigned char input, unsigned int n);\n\nint main() {\n    unsigned int byte;\n    cin >> byte;\n    unsigned int n;\n    cin >> n;\n    cout << extractBit((unsigned char)byte, n);\n    return 0;\n}\n\n::code\nunsigned int extractBit(unsigned char input, unsigned int n) {\n    // YOUR CODE HERE\n}", "is_memory_limit_scaled": true, "is_time_limit_scaled": true, "manual_time_limits": [], "test_archive": []}, "animation": null, "video": null, "tests_archive": "/api/step-sources/122899/tests", "options": {"execution_time_limit": 5, "samples": [["247 3", "0"]], "limits": {"c++11": {"memory": 256, "time": 5}}, "execution_memory_limit": 256, "code_templates": {"c++11": "unsigned int extractBit(unsigned char input, unsigned int n) {\n    // YOUR CODE HERE\n}"}}, "subtitles": {}}, "time": "2017-01-05T20:14:45.369695"}