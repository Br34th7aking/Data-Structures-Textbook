{"block": {"name": "code", "text": "<p><b><span class=\"wysiwyg-color-green\">Code Challenge:</span> Setting the Leftmost Bit</b></p><p>You will need to fill in the body of <span class=\"wysiwyg-font-tt\">setLeftBit()</span>. The input will be a byte (i.e., 8 bits) <span class=\"wysiwyg-font-tt\">input</span> and a single bit <span class=\"wysiwyg-font-tt\">bit</span>, and you will need to set the leftmost bit of <span class=\"wysiwyg-font-tt\">input</span> to <span class=\"wysiwyg-font-tt\">bit</span> and return the result.</p><p>For example, if <span class=\"wysiwyg-font-tt\">input</span> is 127 (i.e., <b>0</b>1111111) and <span class=\"wysiwyg-font-tt\">bit</span> is 1, the result would be 255 (i.e., <b>1</b>1111111).</p>", "video": null, "animation": null, "options": {"code_templates": {"python3": "def setLeftBit(input, bit):\n    # YOUR CODE HERE", "c++11": "unsigned char setLeftBit(unsigned char input, unsigned int bit) {\n    // YOUR CODE HERE\n}"}, "execution_time_limit": 5, "execution_memory_limit": 256, "samples": [["127 1", "255"]], "limits": {"python3": {"time": 15, "memory": 256}, "c++11": {"time": 5, "memory": 256}}}, "subtitle_files": [], "source": {"execution_time_limit": 5, "is_memory_limit_scaled": true, "test_archive": [], "manual_memory_limits": [], "code": "import random\n\ndef generate():\n    num_tests = 10\n    tests = [('127 1',('127 1',solve('127 1')))]\n    for test in range(num_tests):\n        n = str(random.randint(0,255))\n        b = str(random.randint(0,1))\n        t = str(n) + ' ' + str(b)\n        tests.append((t,(t,solve(t))))\n    return tests\n\n\ndef solve(dataset):\n    byte,bit = dataset.split(' ')\n    byte = int(byte)\n    bit = int(bit)\n    return str((byte & (~(1 << 7))) | (bit << 7))\n\n\ndef check(reply, clue):\n    test = clue[0]\n    clue = clue[1]\n    if int(reply) == int(clue):\n        return 1\n    else:\n        return 0, \"Wrong answer\\nInput:\\n\" + test + \"\\nYour output:\\n\" + reply + \"\\nCorrect output:\\n\" + clue", "manual_time_limits": [], "execution_memory_limit": 256, "is_time_limit_scaled": true, "templates_data": "::python3\n::header\n::code\ndef setLeftBit(input, bit):\n    # YOUR CODE HERE\n::footer\nfrom sys import stdin\nbyte,bit = stdin.read().strip().split(' ')\nprint(setLeftBit(int(byte),int(bit)))\n\n::c++11\n::header\n#include <iostream>\n#include <set>\n#include <string>\nusing namespace std;\n\nunsigned char setLeftBit(unsigned char input, unsigned int bit);\n\nint main() {\n    unsigned int byte;\n    unsigned int bit;\n    cin >> byte;\n    cin >> bit;\n    cout << (int)setLeftBit((unsigned char)byte, bit);\n    return 0;\n}\n\n::code\nunsigned char setLeftBit(unsigned char input, unsigned int bit) {\n    // YOUR CODE HERE\n}", "samples_count": 1}, "subtitles": {}, "tests_archive": "/api/step-sources/122764/tests", "feedback_correct": "", "feedback_wrong": ""}, "id": "122764", "time": "2018-03-04T14:42:43.215495"}