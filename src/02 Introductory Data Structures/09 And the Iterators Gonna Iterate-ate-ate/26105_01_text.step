{"block": {"name": "text", "text": "<p>As you may have noticed by now, although many data structures have similar functionality (e.g. insert, remove, find, etc.) and similar purpose (i.e., to store data in a structured fashion), they are implemented in fundamentally different ways. The differences in their implementations are essentially the causes of their differing costs/benefits. However, as data structure wizards, we want to code our data structures in a fashion such that the user doesn't have to worry about the implementation details. For example, take the following segment of code:</p><p></p><pre><code class=\"cpp\">for(auto element : data) {\n    cout &lt;&lt; element &lt;&lt; endl;\n}</code></pre><br><p></p><p>What data structure is <span class=\"wysiwyg-font-tt\">data</span>? Is it a <span class=\"wysiwyg-font-tt\">set</span>? <span class=\"wysiwyg-font-tt\">unordered_set</span>? <span class=\"wysiwyg-font-tt\">vector</span>? It could be any of these, or maybe something else altogether! Nonetheless, we are able to iterate through the elements of <span class=\"wysiwyg-font-tt\">data</span> in a clean fashion. In this section, we will be covering the C++ Standard Template Library (STL), with our attention focused on iterators, the mystical entities that make this functionality possible.</p><p>The <b>iterator pattern</b> of Object-Oriented design permits access to the data in some data structure in sequential order, without exposing the container's underlying representation. Basically, it <b>allows us to iterate</b> (hence the name \"iterator\") <b>through the elements of a data structure in a uniform and simple manner</b>.</p><p>You may be familiar with the <b>for-each</b> loop (shown above), where we iterate through the elements of a data structure in a clean fashion: the programming language actually uses an iterator to perform the for-each loop. Note that iterators exist in numerous languages, not just C++.<br></p>", "video": null, "animation": null, "options": {}, "subtitle_files": [], "source": null, "subtitles": {}, "tests_archive": null, "feedback_correct": "", "feedback_wrong": ""}, "id": "96132", "time": "2017-11-07T22:19:11.596180"}