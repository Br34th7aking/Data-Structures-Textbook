{"block": {"name": "text", "text": "<p>Recall from the previous section that <b><span class=\"wysiwyg-color-green\">Array Lists</span></b>\u00a0are excellent if we know exactly how many elements we want to store, but if we don't, they can be problematic either in terms of time complexity (rebuilding the backing array as we need to grow it) or in terms of space complexity (allocating more space than we need just in case).</p><p>We will now introduce a data structure called a\u00a0<b><span class=\"wysiwyg-color-blue\">Linked List</span></b>, which was developed in 1955 by Allen Newell, Cliff Shaw, and Herbert A. Simon at RAND Corporation. The\u00a0<b><span class=\"wysiwyg-color-blue\">Linked List</span></b> is a\u00a0dynamically-allocated data structures, meaning it grows dynamically in memory on its own very time-efficiently (as opposed to an <b><span class=\"wysiwyg-color-green\">Array List</span></b>, for which we needed to explicitly reallocate memory as the backing array fills, which is a very time-costly operation). When analyzing various aspects of the <b><span class=\"wysiwyg-color-blue\">Linked List</span></b>, try to keep the <b><span class=\"wysiwyg-color-green\">Array List</span></b>\u00a0in mind because both are \"list\" structures, so they can effectively do the same things, but they each have their respective pros and cons.</p><p><img title=\"Image: https://ucarecdn.com/ee17037e-cabb-4d48-9afb-6314c91f60e0/\" src=\"https://ucarecdn.com/ee17037e-cabb-4d48-9afb-6314c91f60e0/\" alt=\"\"></p><p class=\"wysiwyg-text-align-center\"><b>Figure:</b>\u00a0Allen Newell (right) and Herbert Simon (left) (courtesy of Carnegie Mellon University)<br></p>", "video": null, "animation": null, "options": {}, "subtitle_files": [], "source": null, "subtitles": {}, "tests_archive": null, "feedback_correct": "", "feedback_wrong": ""}, "id": "110664", "time": "2017-11-07T22:17:12.785458"}