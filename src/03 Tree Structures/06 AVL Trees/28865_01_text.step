{"time": "2016-09-20T20:54:51.473051", "block": {"name": "text", "subtitles": {}, "source": null, "subtitle_files": [], "feedback_wrong": "", "video": null, "animation": null, "feedback_correct": "", "tests_archive": null, "text": "<p>We learned about the\u00a0<b><span class=\"wysiwyg-color-green\">Binary Search Tree</span></b>, which we formally proved has an <b>average-case</b> time complexity of <b>O(log\u00a0</b><i><b>n</b></i><b>)</b> if we were to make unrealistic assumptions. We then discussed an improved data structure, the\u00a0<b><span class=\"wysiwyg-color-blue\">Randomized Search Tree</span></b>, which is actually able to obtain this <b>O(log\u00a0</b><i><b>n</b></i><b>) average-case</b> time complexity without the need for unrealistic assumptions. Nevertheless, in the <b>worst case</b>, both structures have an <b>O(</b><i><b>n</b></i><b>)</b> time complexity. Can we squeeze even more speed out of our trees?</p><p>In 1962, two Soviet computer scientists,\u00a0Georgy Adelson-Velsky and Evgenii Landis, forever changed the landscape of\u00a0<b><span class=\"wysiwyg-color-green\">Binary Search Tree</span></b> structures when they created a revolutionary self-balancing tree that achieves\u00a0a <b>worst-case</b> time complexity of <b>O(log <i>n</i>)</b>. They named this new data structure after themselves, the\u00a0<b>A</b>delson-<b>V</b>elsky and\u00a0<b>L</b>andis tree, or as we know it, the\u00a0<b><span class=\"wysiwyg-color-purple\">AVL Tree</span></b>.</p><p><img title=\"Image: https://ucarecdn.com/cea86756-d236-486a-8e46-51b26baa0486/\" src=\"https://ucarecdn.com/cea86756-d236-486a-8e46-51b26baa0486/\" alt=\"\" width=\"606\" height=\"383\"></p><p class=\"wysiwyg-text-align-center\"><b>Figure:</b>\ufeff Georgy Adelson-Velsky (left) playing chess against John McCarthy (right), the creator of the Lisp programming language<br></p>", "options": {}}, "id": "110662"}