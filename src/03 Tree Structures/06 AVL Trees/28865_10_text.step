{"block": {"name": "text", "text": "<p>Below is a more complex example in which we insert 10 into the following\u00a0<b><span class=\"wysiwyg-color-purple\">AVL Tree</span></b>:</p><p><img alt=\"\" src=\"https://ucarecdn.com/624dd670-79c2-46b3-b572-f8f69ba96b56/\"></p><p>Following the traditional <b><span class=\"wysiwyg-color-green\">Binary Search Tree</span></b> insertion algorithm, we would get the following tree (note that we have updated balance factors as well):</p><p><img alt=\"\" src=\"https://ucarecdn.com/cf23416c-1777-4d11-8b27-060798ab6651/\"></p><p>As you can see, the root node is now out of balance, and as a result, we need to fix its balance. However, as we highlighted via the bent red arrow above, this time, our issue is in a \"kink\" shape (not a \"straight line\" shape, as it was in the previous complex example). As a result, a single AVL rotation will no longer suffice, and we are forced to perform a double rotation. The first rotation will be a left rotation on node 5 in order to transform this \"kink\" shape into a \"straight line\" shape:</p><p><img src=\"https://ucarecdn.com/3d439caf-248c-42d6-92cc-ee3862c07364/\" alt=\"\" title=\"Image: https://ucarecdn.com/3d439caf-248c-42d6-92cc-ee3862c07364/\"></p><p>Now, we have successfully transformed our problematic \"kink\" shape into the \"straight line\" shape we already know how to fix. Thus, we can perform a right rotation on the root to fix our tree:</p><p><br></p><img src=\"https://ucarecdn.com/33a81d45-5ecc-4e18-94ef-17686428b43a/\">", "video": null, "animation": null, "options": {}, "subtitle_files": [], "source": null, "subtitles": {}, "tests_archive": null, "feedback_correct": "", "feedback_wrong": ""}, "id": "123397", "time": "2018-03-04T14:38:21.737393"}