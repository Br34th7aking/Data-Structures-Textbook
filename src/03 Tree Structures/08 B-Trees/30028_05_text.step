{"block": {"name": "text", "text": "<p>How do we insert new elements into a a  <b><span class=\"wysiwyg-color-green\">B-Tree</span></b>? The insert operation for a  <b><span class=\"wysiwyg-color-green\">B-Tree</span></b> is a slightly intricate matter since, as we mentioned earlier, this is a <i>self-balancing</i> tree. Moreover, we have the requirement that <i>all</i>\u00a0leaves <i>must</i>\u00a0be on the <b>same</b> level of the tree. How do we achieve this? The secret to having the leaves constantly be on the same level is to have the tree grow <i>upward</i> instead of down from the root, which is an approach unlike any of the tree structures we have discussed thus far.</p><p>Let's look at an example for a <b><span class=\"wysiwyg-color-green\">B-Tree</span></b> in which <i>b</i> = 2:</p><p><img height=\"216\" src=\"https://ucarecdn.com/94ab1756-32cc-432b-aea3-a3e29fe3904a/\" width=\"429\" alt=\"\"></p><p><img height=\"280\" src=\"https://ucarecdn.com/adea16b1-298e-4606-a548-b0cacd5f981e/\" width=\"424\" alt=\"\"></p><p>Notice how, every time we insert, we \"shuffle\" over the keys to make sure that the keys in our node stay properly sorted.<br>Also, notice that, in the first 3 insertions, there was just one node and that node was the root. However, in the last insertion, where our node grew too big, we cut the node and chose the largest key of the first half of the node to create a new root (i.e., the tree grew <i>upward</i>). By doing so, we have now kept all leaves on the same level!</p>", "video": null, "animation": null, "options": {}, "subtitle_files": [], "source": null, "subtitles": {}, "tests_archive": null, "feedback_correct": "", "feedback_wrong": ""}, "id": "122791", "time": "2017-11-07T22:21:07.000103"}