{"id": "120929", "block": {"feedback_correct": "", "name": "text", "feedback_wrong": "", "text": "<p>As you hopefully noticed, although\u00a0<i>some</i>\u00a0<b><span class=\"wysiwyg-color-red\">Red-Black Trees</span></b> are <i>also</i>\u00a0<b><span class=\"wysiwyg-color-blue\">AVL Trees</span></b>,\u00a0<i>not all</i>\u00a0<b><span class=\"wysiwyg-color-red\">Red-Black Trees</span></b> are\u00a0<b><span class=\"wysiwyg-color-blue\">AVL Trees</span></b>. Specifically, based on the example in the previous step,\u00a0<b><span class=\"wysiwyg-color-blue\">AVL Trees</span></b> are actually\u00a0<i>more balanced</i> than\u00a0<b><span class=\"wysiwyg-color-red\">Red-Black Trees</span></b>, as the\u00a0<b><span class=\"wysiwyg-color-blue\">AVL Tree</span></b> balance restrictions are stricter than the\u00a0<b><span class=\"wysiwyg-color-red\">Red-Black Tree</span></b> balance restrictions. Nevertheless, we can formally prove that\u00a0<b><span class=\"wysiwyg-color-red\">Red-Black Trees</span></b> do indeed also have a\u00a0<b>O(log\u00a0<i>n</i>) worst-case</b> time complexity.</p><p>First, let's define $ bh(x) $\u00a0to be the <i>black height</i>\u00a0of node\u00a0<i>x</i>. In other words,\u00a0$ bh(x) $\u00a0is the number of <b>black</b> nodes on the path from\u00a0<i>x</i> to a leaf, excluding itself. We claim that\u00a0any subtree rooted at <i>x</i> has at least\u00a0$ 2^{bh(x)}-1 $\u00a0internal nodes, which we can prove by induction.</p><p>Our base case is when\u00a0$ bh(x)=0 $, which only occurs when\u00a0<i>x</i> is a leaf. The subtree rooted at\u00a0<i>x</i> only contains node\u00a0<i>x</i>, meaning the subtree has 0 internal nodes (because\u00a0<i>x</i> is a leaf, and is thus not an internal node by definition). We see that our claim holds true on the base case:\u00a0$ 2^{bh(x)}-1 = 2^{0}-1 = 1-1 = 0 $\u00a0internal nodes in the subtree rooted on <i>x</i>.</p><p>Now, let's assume this claim holds true for all trees with a <i>black height</i> less than\u00a0$ bh(x) $. If\u00a0<i>x</i> is <b>black</b>, then both subtrees of\u00a0<i>x</i> have a <i>black height</i> of\u00a0$ bh(x)-1 $. If\u00a0<i>x</i> is <b><span class=\"wysiwyg-color-red\">red</span></b>, then both subtrees of\u00a0<i>x</i> have a <i>black height</i> of\u00a0$ bh(x) $. Therefore,\u00a0the number of internal nodes in any subtree of\u00a0<i>x</i> is\u00a0$ n \\ge 2^{bh(x)-1}-1 + 2^{bh(x)-1}-1 + 1 \\ge 2^{bh(x)}-1  $.</p><p>Now, let's define\u00a0<i>h</i> to be the <b>height</b> of our tree.\u00a0At least half of the nodes on any path from the root to a leaf must be <b>black</b> if we ignore the root (because we are not allowed to have two <b><span class=\"wysiwyg-color-red\">red</span></b> nodes in a row, so in the worst case, we'll have a <b>black-<span class=\"wysiwyg-color-red\">red</span>-black-<span class=\"wysiwyg-color-red\">red</span>-black-...</b> pattern along the path). Therefore,\u00a0$ bh(x) \\ge \\frac{h}{2} $\u00a0and\u00a0$ n \\ge 2^{\\frac{h}{2}}-1$, so\u00a0$ n+1 \\ge 2^{\\frac{h}{2}} $.</p><p>This implies that\u00a0$ \\log(n+1) \\ge \\frac{h}{2}$, so\u00a0$ h \\le 2 \\log(n+1) $. In other words, we have formally proven that the <b>height of a</b> <b><span class=\"wysiwyg-color-red\">Red-Black Tree</span></b><b> is O(log\u00a0<i>n</i>)</b>.</p>", "subtitle_files": [], "source": null, "animation": null, "video": null, "tests_archive": null, "options": {}, "subtitles": {}}, "time": "2017-02-14T23:16:09.697521"}