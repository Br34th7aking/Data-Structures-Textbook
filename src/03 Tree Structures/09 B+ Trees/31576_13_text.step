{"block": {"name": "text", "text": "<p>As we have now seen, the \u00a0<b><span class=\"wysiwyg-color-purple\">B+ Tree</span></b> is actually very similar to the \u00a0<b><span class=\"wysiwyg-color-green\">B-Tree</span></b>. Both are self-balancing trees that have logarithmic insertion, find, and delete operations. However, because of the two changes that we made to the  <b><span class=\"wysiwyg-color-green\">B-Tree</span></b>\u2014storing data records <i>only</i> at the leaves and implementing the leaves as a Linked List (something that we admittedly ignored for the sake of the keeping the\u00a0<b><span class=\"wysiwyg-color-purple\">B+ Tree</span></b> a valid tree\u2014the  <b><span class=\"wysiwyg-color-purple\">B+ Tree</span></b> <i>actually</i> becomes extremely useful to store large data sets. It is actually so useful, that it <i>really is</i> used to implement common database languages and file systems!\u00a0 <br></p><p>For example, relational database systems such as\u00a0 <a href=\"https://en.wikipedia.org/wiki/IBM_DB2\" rel=\"nofollow\">IBM DB2</a>, <a href=\"https://en.wikipedia.org/wiki/Informix\" rel=\"nofollow\">Informix</a>, <a href=\"https://en.wikipedia.org/wiki/Microsoft_SQL_Server\" rel=\"nofollow\">Microsoft SQL Server</a>,<span class=\"wysiwyg-font-sup\">\u00a0</span> <a href=\"https://en.wikipedia.org/wiki/Oracle_Database\" rel=\"nofollow\">Oracle 8</a>,<span class=\"wysiwyg-font-sup\">\u00a0</span> <a href=\"https://en.wikipedia.org/wiki/Adaptive_Server_Enterprise\" rel=\"nofollow\">Sybase ASE</a>, and <a href=\"https://en.wikipedia.org/wiki/SQLite\" rel=\"nofollow\">SQLite</a> support the use of a <b><span class=\"wysiwyg-color-purple\">B+ Tree</span></b> to efficiently index into data entries. Also, your very own computer's operating system is likely using\u00a0<b><span class=\"wysiwyg-color-purple\">B+ Trees</span></b> to organize data on your hard drive! <a href=\"https://en.wikipedia.org/wiki/NTFS\" rel=\"nofollow\">NTFS</a>, the file system used by all modern Windows operating systems, uses\u00a0<b><span class=\"wysiwyg-color-purple\">B+ Trees</span></b> for directory indexing, and <a href=\"https://en.wikipedia.org/wiki/Ext4\" rel=\"nofollow\">ext4</a>, a file system very commonly used in a wide variety of Linux distributions, uses\u00a0<b>extent trees</b> (a modified version of the\u00a0<b><span class=\"wysiwyg-color-purple\">B+ Tree</span></b>) for file extent indexing.</p><p>This concludes our discussion of tree structures, but as you may have noticed, in this section, we had already started to deviate from the traditional definition of a \"tree\" by introducing the Linked List structure at the leaves of a\u00a0<b><span class=\"wysiwyg-color-purple\">B+ Tree</span></b> that violate the formal \"tree\" definition. In the next chapter, we will finally expand our vision and generalize the notion of \"nodes\" and \"edges\" without the restrictions we placed on our data structures in this chapter. Specifically, in the next chapter, we will discuss\u00a0<b>graphs</b>.</p>", "video": null, "animation": null, "options": {}, "subtitle_files": [], "source": null, "subtitles": {}, "tests_archive": null, "feedback_correct": "", "feedback_wrong": ""}, "id": "124459", "time": "2017-09-11T11:47:43.688522"}