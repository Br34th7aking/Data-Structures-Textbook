{"block": {"name": "choice", "text": "<p><b><span class=\"wysiwyg-color-purple\">EXERCISE BREAK:</span></b> Which of the following are valid ways to modify an unweighted graph to have <b><span class=\"wysiwyg-color-purple\">Dijkstra's Algorithm</span></b> be able to accurately produce the shortest paths from one vertex to all other vertices? (Select all that apply)</p>", "video": null, "animation": null, "options": {}, "subtitle_files": [], "source": {"is_html_enabled": true, "is_always_correct": false, "options": [{"feedback": "", "text": "No valid modifications can be made; this excersise break is a trick question. ", "is_correct": false}, {"feedback": "", "text": "No modifications need to be made; the algorithm already takes into account unweighted edges.", "is_correct": false}, {"feedback": "", "text": "We can assign a cost of 1 to each edge. ", "is_correct": true}, {"feedback": "", "text": "We can assign a cost of \u00b9/\u2082 to each edge. ", "is_correct": true}, {"feedback": "", "text": "We can assign a cost of -1 to each edge. ", "is_correct": false}, {"feedback": "", "text": "We can assign any cost to any edge and Dijkstra's will inevitably produce the shortest path. ", "is_correct": false}], "is_multiple_choice": true, "is_options_feedback": false, "preserve_order": false, "sample_size": 6}, "subtitles": {}, "tests_archive": null, "feedback_correct": "", "feedback_wrong": ""}, "id": "117891", "time": "2017-09-11T11:48:28.694484"}