{"id": "121799", "block": {"feedback_correct": "", "name": "text", "feedback_wrong": "", "text": "<p>Throughout this text, three basic operations for storing data have been on our minds:\u00a0<i>find</i>,\u00a0<i>insert</i>, and\u00a0<i>remove</i>.\u00a0We have discussed various data structures that can be used to implement these three functions, and we have analyzed their time complexities in order to describe their performance:</p><ul><li>In an<i> unsorted</i> Array List and a Linked List, the <i>worst</i>-case time complexity to find an element is\u00a0<b>O(<i>n</i>)</b></li><li>In a Randomized Search Tree and a well-structured Skip List, the <i>average</i>-case time complexity to find an element is\u00a0<b>O(log\u00a0<i>n</i>)</b></li><li>In a <i>sorted</i> Array List and a balanced Binary Search Tree, the <i>worst</i>-case time complexity to find an element is<b> O(log <i></i><i>n</i><i></i>)</b></li></ul><p>O(log <i>n</i>) is pretty fast, but as we have said before, us computer scientists can never be satisfied: we want even\u00a0<i>faster</i> data structures. With an array, if we knew the specific index we wanted to access, we could theoretically access our element of interest in O(1) time. Formally, if we were looking\u00a0for a key <i>k </i>in an array <i>a</i> <b>and</b>\ufeff if we had a way of knowing that key <i>k</i> would be at index <i>i</i>, we could find <i>k</i> with a single O(1) array access operation: <i>a</i>[<i>i</i>].</p><p><b><span class=\"wysiwyg-color-blue\">Hashing</span></b> is a way of making the idea above a reality. Given an element <i>k</i>,\u00a0<b><span class=\"wysiwyg-color-blue\">Hashing</span></b> would help us figure out where we would expect\u00a0<i>k</i> to appear in an array.\u00a0In this section, we will discuss good design methods that allow us to achieve an\u00a0average-case\n\n time complexity of<b> O(1)</b> for finding, inserting, and removing elements. Specifically, the data structure we will discuss is the\u00a0<b><span class=\"wysiwyg-color-purple\">Hash Table</span></b>.<br></p>", "subtitle_files": [], "source": null, "animation": null, "video": null, "tests_archive": null, "options": {}, "subtitles": {}}, "time": "2017-06-08T22:36:39.695553"}