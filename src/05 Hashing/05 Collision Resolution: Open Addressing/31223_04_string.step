{"time": "2016-09-20T20:57:58.039043", "block": {"name": "string", "subtitles": {}, "source": {"code": "def check(reply):\n    try:\n        i = int(reply)\n    except:\n        return 0, \"Please enter a valid integer (and nothing else)\"\n    if i < 0:\n        return 0, \"The index must be greater than or equal to 0\"\n    elif i > 6:\n        return 0, \"Remember, if M = 7, valid indices must be less than 7\"\n    else:\n        return i == 2\n\ndef solve():\n    return \"2\"", "use_re": false, "match_substring": false, "pattern": "", "case_sensitive": false}, "subtitle_files": [], "feedback_wrong": "", "video": null, "animation": null, "feedback_correct": "", "tests_archive": null, "text": "<p><b><span class=\"wysiwyg-color-purple\">EXERCISE BREAK:</span></b> Suppose we have an empty <b><span class=\"wysiwyg-color-purple\">Hash Table</span></b>, where <i>H</i>(<i>k</i>) = <i>k</i> % <i>M</i>\u00a0and <i>M</i> = 7. After inserting the keys 31, 77, and 708 into our <b><span class=\"wysiwyg-color-purple\">Hash Table</span></b>\u00a0(in that order), which index will the key 49 end up hashing to using the collision resolution strategy of <b><span class=\"wysiwyg-color-blue\">Linear Probing</span></b>?</p>", "options": {}}, "id": "122163"}