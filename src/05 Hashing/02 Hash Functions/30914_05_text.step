{"id": "122041", "block": {"feedback_correct": "", "name": "text", "feedback_wrong": "", "text": "<p>We've now discussed the properties of a <b><span class=\"wysiwyg-color-green\">hash function</span></b> as well as what makes a given <b><span class=\"wysiwyg-color-green\">hash function</span></b> good or bad. However, it is important to note that, for most things you will do in practice, excellent <b><span class=\"wysiwyg-color-green\">hash functions</span></b> will have already been defined; you typically only have to worry about writing your own\u00a0<b><span class=\"wysiwyg-color-green\">hash function</span></b> if you design your own object.\u00a0</p><p>Nevertheless, we can now assume that, given a datatype we wish to store, we have some (hopefully good)\u00a0<b><span class=\"wysiwyg-color-green\">hash function</span></b> that can return a hash value for an object of that type. We can now tie this back to our original idea of using hash values in order to determine indices to use to store elements in an array. Say we have an array of length\u00a0<i>m</i> and we want to insert an object\u00a0<i>key</i>\u00a0into the array. We can now perform two\u00a0<b><span class=\"wysiwyg-color-blue\">hashing</span></b> steps:</p><p></p><ol><li>Call\u00a0<i>h</i>(<i>key</i>), where\u00a0<i>h</i> is the <b><span class=\"wysiwyg-color-green\">hash function</span></b> for the type of object\u00a0<i>key</i> is, and save the result as\u00a0<i>hashValue</i></li><li>Perform a second \"<b><span class=\"wysiwyg-color-blue\">hashing</span></b>\" by modding\u00a0<i>hashValue</i> by\u00a0<i>m</i> to get a valid index in the array (i.e.,\u00a0<i>index</i> =\u00a0<i>hashValue</i> %\u00a0<i>m</i>)</li></ol><p>By performing these two steps, given an arbitrary object <i>key</i>,\u00a0we are able to successfully compute a valid index in our array in which we can store\u00a0<i>key</i>. Again, as we mentioned before, if our\u00a0<b><span class=\"wysiwyg-color-green\">hash function</span></b> is not <i>perfect</i> (i.e., if we sometimes hash\u00a0<i>different</i> objects to the\u00a0<i>same</i> hash value), or if two different hash values result in the same value when modded by <i>m</i>\ufeff,\u00a0we will run into\u00a0<i>collisions</i>, which we will discuss extensively later in this chapter.</p>", "subtitle_files": [], "source": null, "animation": null, "video": null, "tests_archive": null, "options": {}, "subtitles": {}}, "time": "2017-06-08T22:36:51.058235"}