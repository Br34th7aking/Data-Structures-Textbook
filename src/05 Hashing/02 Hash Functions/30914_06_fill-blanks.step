{"block": {"name": "fill-blanks", "text": "<p><b><span class=\"wysiwyg-color-purple\">EXERCISE BREAK:</span></b> Say you have an array of length 5. Also, you have a primary <b><span class=\"wysiwyg-color-green\">hash function</span></b> that simply returns the integer it was given (i.e., <i>h</i>(<i>k</i>) = <i>k</i>), and you have a secondary <b><span class=\"wysiwyg-color-green\">hash function</span></b> that computes an index in your array by modding the result of the primary <b><span class=\"wysiwyg-color-green\">hash function</span></b> by the length of the array (i.e., <i>index</i> = <i>H</i>(<i>k</i>) = <i>h</i>(<i>k</i>) % 5). For each of the following integers, compute the index of your array to which they <b><span class=\"wysiwyg-color-blue\">hash</span></b>.</p><p>For example, if you were given the number <b>8</b>, <i>h</i>(8) = 8, so <i><b>index</b></i> <b>=</b> <i><b>H</b></i><b>(8)</b> <b>=</b> <i>h</i>(8) % 5 = 8 % 5 = <b>3</b>.<br></p><p>When filling the blanks, note that the left blank of a row should contain the value of <i>h</i>(<i>k</i>), and the right blank of a row should contain the final index value, <i>h</i>(<i>k</i>\ufeff) % 5.</p>", "video": null, "animation": null, "options": {}, "subtitle_files": [], "source": {"is_case_sensitive": false, "components": [{"text": "H(12) = h(12) % 5 = ", "type": "text", "options": []}, {"text": "", "type": "input", "options": [{"is_correct": true, "text": "12"}]}, {"text": " % 5 = ", "type": "text", "options": []}, {"text": "", "type": "input", "options": [{"is_correct": true, "text": "2"}]}, {"text": "<br>H(17) = h(17) % 5 = ", "type": "text", "options": []}, {"text": "", "type": "input", "options": [{"is_correct": true, "text": "17"}]}, {"text": " % 5 = ", "type": "text", "options": []}, {"text": "", "type": "input", "options": [{"is_correct": true, "text": "2"}]}, {"text": "<br>H(22) = h(22) % 5 = ", "type": "text", "options": []}, {"text": "", "type": "input", "options": [{"is_correct": true, "text": "22"}]}, {"text": " % 5 = ", "type": "text", "options": []}, {"text": "", "type": "input", "options": [{"is_correct": true, "text": "2"}]}, {"text": "<br>H(27) = h(27) % 5 = ", "type": "text", "options": []}, {"text": "", "type": "input", "options": [{"is_correct": true, "text": "27"}]}, {"text": " % 5 = ", "type": "text", "options": []}, {"text": "", "type": "input", "options": [{"is_correct": true, "text": "2"}]}, {"text": "<br>H(32) = h(32) % 5 = ", "type": "text", "options": []}, {"text": "", "type": "input", "options": [{"is_correct": true, "text": "32"}]}, {"text": "% 5 = ", "type": "text", "options": []}, {"text": "", "type": "input", "options": [{"is_correct": true, "text": "2"}]}]}, "subtitles": {}, "tests_archive": null, "feedback_correct": "Notice that h(k) is a perfect hash function (i.e., no collisions), but because of the size of our array, hashing to an index using H(k) results in MANY collisions.", "feedback_wrong": ""}, "id": "122042", "time": "2018-03-04T14:40:17.850256"}