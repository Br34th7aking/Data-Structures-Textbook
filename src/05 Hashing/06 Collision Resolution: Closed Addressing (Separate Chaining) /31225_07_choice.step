{"block": {"name": "choice", "text": "<p><b><span class=\"wysiwyg-color-purple\">EXERCISE BREAK:</span></b> Consider a <b><span class=\"wysiwyg-color-purple\">Hash Table</span></b> in which collisions are resolved using <b><span class=\"wysiwyg-color-red\">Separate Chaining</span></b>. Select the tightest worst-case time complexity for an insert function that uses a Doubly-Linked List (i.e., there are head and tail pointers, and you can traverse the list in either direction) and inserts keys to the end of the Linked Lists. This insert function does not allow duplicates.</p><p></p>", "video": null, "animation": null, "options": {}, "subtitle_files": [], "source": {"sample_size": 5, "is_multiple_choice": true, "preserve_order": true, "options": [{"feedback": "", "text": "O(1)", "is_correct": false}, {"feedback": "", "text": "O(log <i>n</i>)", "is_correct": false}, {"feedback": "", "text": "O(<i>n</i>)", "is_correct": true}, {"feedback": "", "text": "O(<i>n</i> * log <i>n</i>)", "is_correct": false}, {"feedback": "", "text": "O(<i>n</i>\u00b2)", "is_correct": false}], "is_html_enabled": true, "is_always_correct": false, "is_options_feedback": false}, "subtitles": {}, "tests_archive": null, "feedback_correct": "", "feedback_wrong": ""}, "id": "121547", "time": "2018-03-04T14:40:53.674709"}