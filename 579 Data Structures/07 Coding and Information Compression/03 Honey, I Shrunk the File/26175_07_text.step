{"block": {"tests_archive": null, "feedback_correct": "", "subtitle_files": [], "text": "<p><b>Huffman's Algorithm - <span class=\"wysiwyg-color-blue\">Message Encoding</span>:</b></p><p>Once we have a Huffman Tree, encoding the message is easy:\u00a0For each symbol in the message, output the sequence of bits given by 1's and 0's on the path from the root of the tree to that symbol. A typical approach is to keep a pointer to each symbol's node, and upon encountering a symbol in the message, go to that symbol's node (which is a <b>leaf</b> in the tree) and follow the path to the root with recursive calls, and output the sequence of bits as the recursive calls pop from the runtime stack. We push and pop bits to/from a stack because a leaf's encoding is the path from the\u00a0<i>root</i> to the\u00a0<i>leaf</i>, but in this traversal we described, we follow the path from\u00a0<i>leaf</i> to\u00a0<i>root</i>, meaning each leaf's encoding will be\u00a0<i>reversed</i>\ufeff! So using a stack to push/pop helps us reverse the path labels in order to get the true encoding.</p><p>Recall from the previous Step that the completed Huffman Tree created from our message is as follows:</p><p><span class=\"image-wrapper\"><img src=\"https://ucarecdn.com/1b16b36e-74a3-401f-bd11-e66d8009c3fe/\" alt=\"\" title=\"Image: https://ucarecdn.com/1b16b36e-74a3-401f-bd11-e66d8009c3fe/\"></span></p><p>Let's encode our message (<span class=\"wysiwyg-color-green\"><b>AAAAA</b></span><b><span class=\"wysiwyg-color-purple\">BB</span><span class=\"wysiwyg-color-green\">A</span>HH<span class=\"wysiwyg-color-purple\">B</span><span class=\"wysiwyg-color-blue\">C</span><span class=\"wysiwyg-color-purple\">B</span><span class=\"wysiwyg-color-red\">G</span><span class=\"wysiwyg-color-blue\">CCC</span></b>) using the Huffman Tree we created. In the visualization below, use the arrows in the bottom left to step through the slides.</p>\r\n<iframe src=\"https://docs.google.com/presentation/d/1Bu8nJirMI9G5sYGdzrGJoXkDErGJ-UTXYi3l9DtLarY/embed?start=false&amp;loop=false&amp;delayms=60000\" width=100% height=\"550\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe>\r\n<p></p><p><span>Our original message contained 17 symbols, and thus takes 17 * 8 = 136 bits to represent in ASCII. Our encoded message, however, takes only 37 bits to represent!</span><br></p>", "feedback_wrong": "", "options": {}, "subtitles": {}, "name": "text", "source": null, "video": null, "animation": null}, "time": "2016-09-11T01:12:44.611759", "id": "96577"}