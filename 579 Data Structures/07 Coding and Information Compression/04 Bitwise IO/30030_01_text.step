{"block": {"tests_archive": null, "feedback_correct": "", "subtitle_files": [], "text": "<p>We introduced the idea of\u00a0<b>lossless data compression</b>\u00a0with the goal of encoding data in such a way that we would be able to store them in smaller files on a computer, but with the ability to decode the encoded data perfectly should we want to. Then, we discussed\u00a0<b>Huffman Coding</b>, which allows us to take a message and encode it in the fewest number of bits possible. However, once we have this string of bits, how do we actually go about writing it to disk?</p><p>Recall that the smallest unit of data that can be written to disk is a\u00a0<i>byte</i>, which is (for our purposes) a chunk of 8\u00a0<i>bits</i>. However, we want to be able to write our message to disk one bit at a time, which sounds impossible given what we just said.\u00a0In this section, we will be discussing\u00a0<b>Bitwise IO</b>: the process of writing data to disk\u00a0<i>bit</i>-wise (as opposed to traditional IO, which is\u00a0<i>byte</i>-wise). The discussion will be using C++ specifically, but the process is largely the same in other languages.</p>", "feedback_wrong": "", "options": {}, "subtitles": {}, "name": "text", "source": null, "video": null, "animation": null}, "time": "2016-09-11T01:12:48.791351", "id": "115254"}