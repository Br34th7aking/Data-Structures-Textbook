{"block": {"video": null, "tests_archive": "/api/step-sources/122763/tests", "feedback_correct": "", "animation": null, "text": "<p><b><span class=\"wysiwyg-color-green\">Code Challenge:</span> Setting the <i>n</i>th Bit From the Right</b></p><p>You will need to fill in the body of <span class=\"wysiwyg-font-tt\">setBit()</span>. The input will be a byte (i.e., 8 bits) <span class=\"wysiwyg-font-tt\">input</span>, a single bit <span class=\"wysiwyg-font-tt\">bit</span>, and an integer <span class=\"wysiwyg-font-tt\">n</span>, and you will need to set the <span class=\"wysiwyg-font-tt\">n</span>-th bit of <span class=\"wysiwyg-font-tt\">input</span> (0-based counting from the right) to <span class=\"wysiwyg-font-tt\">bit</span> and return the result.</p><p>For example, if <span class=\"wysiwyg-font-tt\">input</span> is 85 (i.e., 0101<b>0</b>101), <span class=\"wysiwyg-font-tt\">n</span> is 3, and <span class=\"wysiwyg-font-tt\">bit</span> is 1, the result would be 93 (i.e., 0101<b>1</b>101).</p>", "subtitle_files": [], "subtitles": {}, "feedback_wrong": "", "name": "code", "source": {"execution_memory_limit": 256, "is_memory_limit_scaled": true, "code": "import random\n\ndef generate():\n    num_tests = 10\n    tests = [('85 3 1',('85 3 1',solve('85 3 1')))]\n    for test in range(num_tests):\n        B = str(random.randint(0,255))\n        n = str(random.randint(0,7))\n        b = str(random.randint(0,1))\n        t = str(B) + ' ' + str(n) + ' ' + str(b)\n        tests.append((t,(t,solve(t))))\n    return tests\n\n\ndef solve(dataset):\n    byte,n,bit = dataset.split(' ')\n    byte = int(byte)\n    n = int(n)\n    bit = int(bit)\n    return str((byte & (~(1 << n))) | (bit << n))\n\n\ndef check(reply, clue):\n    test = clue[0]\n    clue = clue[1]\n    if int(reply) == int(clue):\n        return 1\n    else:\n        return 0, \"Wrong answer\\nInput:\\n\" + test + \"\\nYour output:\\n\" + reply + \"\\nCorrect output:\\n\" + clue", "samples_count": 1, "is_time_limit_scaled": true, "manual_time_limits": [], "manual_memory_limits": [], "execution_time_limit": 5, "templates_data": "::c++11\n::header\n#include <iostream>\n#include <set>\n#include <string>\nusing namespace std;\n\nunsigned char setBit(unsigned char input, unsigned int n, unsigned int bit);\n\nint main() {\n    unsigned int byte;\n    unsigned int n;\n    unsigned int bit;\n    cin >> byte;\n    cin >> n;\n    cin >> bit;\n    cout << (int)setBit((unsigned char)byte, n, bit);\n    return 0;\n}\n\n::code\nunsigned char setBit(unsigned char input, unsigned int n, unsigned int bit) {\n    // YOUR CODE HERE\n}", "test_archive": []}, "options": {"execution_memory_limit": 256, "code_templates": {"c++11": "unsigned char setBit(unsigned char input, unsigned int n, unsigned int bit) {\n    // YOUR CODE HERE\n}"}, "execution_time_limit": 5, "samples": [["85 3 1", "93"]], "limits": {"c++11": {"memory": 256, "time": 5}}}}, "id": "122763", "time": "2016-09-14T00:14:35.303767"}