{"id": "118619", "block": {"feedback_wrong": "", "tests_archive": null, "text": "<p>We started our discussion of\u00a0<b><span class=\"wysiwyg-color-blue\">Hashing</span></b> with the idea that, given some key\u00a0<i>k</i>, we could come up with a function that could output an integer that \"represents\"\u00a0<i>k</i>. Formally, we call this function a\u00a0<b><span class=\"wysiwyg-color-green\">hash function</span></b>, which we will denote as <i>h</i>(<i>k</i>)\u00a0throughout this section.</p><p>Hopefully, our use of the word \"represents\" upset you a bit: what does the word \"represent\" actually mean mathematically? Formally, a\u00a0<b><span class=\"wysiwyg-color-green\">hash function</span></b> can be described by the following two properties, the first of which being a\u00a0<i>requirement</i> of\u00a0<i>all</i> valid\u00a0<b><span class=\"wysiwyg-color-green\">hash functions</span></b>, and the second being a feature that would be \"nice to have\" if at all possible, but not necessary:</p><p></p><ol><li><b>Property of Equality:</b> Given two keys\u00a0<i>k</i> and\u00a0<i>l</i>, if\u00a0<i>k</i> and\u00a0<i>l</i> are equal,\u00a0<i>h</i>(<i>k</i>)\u00a0<b>must equal</b>\u00a0<i>h</i>(<i>l</i>). In other words, if two keys are equal, they\u00a0<b>must</b> have the same hash value<br></li><li><b>Property of Inequality:</b> Given two keys\u00a0<i>k</i> and\u00a0<i>l</i>, if\u00a0<i>k</i> and\u00a0<i>l</i> are\u00a0<i>not</i> equal, it would be nice if\u00a0<i>h</i>(<i>k</i>) was not equal to\u00a0<i>h</i>(<i>l</i>). In other words, if two keys are\u00a0<i>not</i> equal, it would be nice (but not necessary!) for them to have different hash values</li></ol><p>A <b><span class=\"wysiwyg-color-green\">hash function</span></b> is formally called\u00a0<i>perfect</i> (i.e., a <b>perfect <span class=\"wysiwyg-color-green\">hash function</span></b>) if it is guaranteed to return different hash values for different keys (in other words, if it is guaranteed to have\u00a0<i>both</i> the\u00a0<b>Property of Equality</b>\u00a0<i>and</i> the\u00a0<b>Property of Inequality</b>).</p><p>For our purposes with regard to Data Structures, a \"good\" <b><span class=\"wysiwyg-color-green\">hash function</span></b> means that different keys will map to different indices in our array, making our lives easier. Formally, we say that a \"good\" <b><span class=\"wysiwyg-color-green\">hash function</span></b> minimizes\u00a0<i>collisions</i> in a\u00a0<b><span class=\"wysiwyg-color-purple\">Hash Table</span></b>\u00a0(even if collisions are still theoretically possible), which simply translates to better (i.e., faster) performance. The mechanism by which collisions worsen the performance of a\u00a0<b><span class=\"wysiwyg-color-purple\">Hash Table</span></b> (as well as how we deal with them) will be discussed extensively later in this chapter, but for now, trust us.</p>", "subtitle_files": [], "options": {}, "name": "text", "subtitles": {}, "animation": null, "feedback_correct": "", "source": null, "video": null}, "time": "2016-09-04T00:49:28.828187"}