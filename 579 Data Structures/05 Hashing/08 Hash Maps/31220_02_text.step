{"id": "121797", "time": "2016-09-09T17:01:40.000345", "block": {"subtitle_files": [], "text": "<b></b><b><span class=\"wysiwyg-color-red\">Note:</span></b> If you have programming experience in python and know what a <a href=\"https://docs.python.org/2/tutorial/datastructures.html#dictionaries\" rel=\"nofollow\">dictionary</a> is, then congratulations, you have been using a <b><span class=\"wysiwyg-color-green\">Hash Map</span><i> </i></b><span class=\"wysiwyg-color-green\"><span class=\"wysiwyg-color-black\">all\n along and are already one step (no pun intended) ahead of us! If you \nhave no clue what we are talking about, then read on!<br></span></span><p></p><p><span class=\"wysiwyg-color-green\"><span class=\"wysiwyg-color-black\">By now we have seen the benefits of a <b><span class=\"wysiwyg-color-purple\">Hash Table</span></b> and are hopefully convinced that if we want to store data of <i>any</i> type and retrieve it fast, a <b><span class=\"wysiwyg-color-purple\">Hash Table</span></b> is the data structure to use. However, so far we've only been given the opportunity to store one object at a time: the <b><span class=\"wysiwyg-color-blue\">key</span></b>. For example, if we had a class of students, we could either store all their names or all their grades<span class=\"wysiwyg-color-green\"><span class=\"wysiwyg-color-black\">, but not both</span></span>, within a single <b><span class=\"wysiwyg-color-purple\">Hash Table</span></b>. We could, of course, store the student names and grades in separate <b><span class=\"wysiwyg-color-purple\">Hash Tables</span></b>, but how would we know which student has which grade?</span></span><br><img src=\"https://ucarecdn.com/23f88623-1ffd-46d2-9e28-97739e0a9804/\" alt=\"\" height=\"294\" width=\"449\"><br></p><p><span class=\"wysiwyg-color-green\"><span class=\"wysiwyg-color-black\"> Consequently, we want to find a way to be able to store a student name <i>with</i> his or her letter grade. This is where a </span></span><span class=\"wysiwyg-color-black\"><b><span class=\"wysiwyg-color-green\">Map</span></b></span><span class=\"wysiwyg-color-green\"><span class=\"wysiwyg-color-black\"> <b>Abstract Data Type</b> comes into play! A <span class=\"wysiwyg-color-black\"><b><span class=\"wysiwyg-color-green\">Map</span></b></span> <b>ADT </b>allows us to\u00a0<i>map</i> <b><span class=\"wysiwyg-color-blue\">keys</span></b> to values. Specifically, a <span class=\"wysiwyg-color-black\"><b><span class=\"wysiwyg-color-green\">Map</span></b></span> <b>ADT</b> does this by storing tuples in the format of &lt;<b><span class=\"wysiwyg-color-blue\">key</span></b>, value&gt; as opposed to just a single <b><span class=\"wysiwyg-color-blue\">key</span></b>. For example:<br></span></span></p><p><br><img src=\"https://ucarecdn.com/e9108a34-1aad-4123-b52d-be6e9d695028/\" alt=\"\" height=\"150\" width=\"523\"><br></p><p><span class=\"wysiwyg-color-green\"><span class=\"wysiwyg-color-black\">With this type of structure, if we want to now quickly check what grade Kammy has in our Grade Book, we can use the\u00a0<b><span class=\"wysiwyg-color-blue\">key</span></b> to return the value like so:</span></span></p><p></p><pre><code>cout &lt;&lt; Grade_Book['Kammy'] &lt;&lt; endl;\n\n// Output:\n// A\n</code></pre><p></p>", "feedback_correct": "", "tests_archive": null, "subtitles": {}, "source": null, "name": "text", "video": null, "feedback_wrong": "", "options": {}, "animation": null}}