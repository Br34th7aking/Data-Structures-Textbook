{"id": "122549", "block": {"name": "choice", "tests_archive": null, "animation": null, "feedback_wrong": "", "subtitle_files": [], "video": null, "options": {}, "text": "<p><b><span class=\"wysiwyg-color-purple\">EXERCISE BREAK:</span>\u00a0 </b>Select all true statements with regards to the following code:</p><p></p><pre><code>std::unordered_map&lt;std::string, std::string&gt; Grocery_List = {\n                { \"Fruit\", \"Bananas\"},\n                { \"Cereal\", \"Frosted Flakes\"},\n                { \"Vegetable\", \"Cucumbers\"},\n                { \"Juice\", \"Cranberry\"}\n\u2003};</code></pre><p></p><p></p><pre><code>Grocery_List.insert({\"Ice Cream\", \"Chocolate Chip\"});\nGrocery_List.insert({\"Juice\", \"Carrot\"});\n</code></pre><p></p>", "source": {"is_multiple_choice": true, "preserve_order": false, "is_html_enabled": true, "options": [{"feedback": "", "text": "Grocery_List[\"Juice\"] will return \"Cranberry\"", "is_correct": true}, {"feedback": "", "text": "Grocery_List[\"Cereal\"] will return \"Frosted Flakes\"", "is_correct": true}, {"feedback": "How does a hash map handle duplicate insertions?", "text": "Grocery_List[\"Juice\"] will return \"Carrot\"", "is_correct": false}, {"feedback": "How does a hash map handle duplicate insertions?", "text": "Grocery_List[\"Juice\"] will return \"Carrot, Cranberry\"", "is_correct": false}, {"feedback": "Does a hash map store items in sorted order?", "text": "The tuple containing \"Fruit\" will be sorted to always appear before the tuple containing \"Ice Cream\"", "is_correct": false}], "sample_size": 5, "is_always_correct": false}, "subtitles": {}, "feedback_correct": ""}, "time": "2016-09-12T22:32:00.865066"}