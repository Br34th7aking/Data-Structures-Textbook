{"id": "121054", "block": {"subtitles": {}, "source": {"samples_count": 1, "manual_time_limits": [], "manual_memory_limits": [], "execution_time_limit": 5, "is_memory_limit_scaled": true, "templates_data": "", "is_time_limit_scaled": true, "execution_memory_limit": 256, "code": "#This is sample code challenge\nimport random\n\ndef generate():\n    num_tests = 10\n    tests = []\n    for test in range(num_tests):\n        a = random.randrange(10)\n        b = random.randrange(10)\n        test_case = \"{} {}\\n\".format(a, b)\n        tests.append(test_case)\n    return tests\n\n\ndef solve(dataset):\n    a, b = dataset.split()\n    return str(int(a)+int(b))\n\n\ndef check(reply, clue):\n    return int(reply) == int(clue)", "test_archive": []}, "video": null, "feedback_wrong": "", "options": {"limits": {"asm32": {"memory": 256, "time": 5}, "shell": {"memory": 256, "time": 5}, "javascript": {"memory": 256, "time": 15}, "r": {"memory": 256, "time": 8}, "c++": {"memory": 256, "time": 5}, "asm64": {"memory": 256, "time": 5}, "ruby": {"memory": 256, "time": 15}, "python3": {"memory": 256, "time": 15}, "haskell 8.0": {"memory": 256, "time": 10}, "rust": {"memory": 256, "time": 13}, "haskell 7.10": {"memory": 256, "time": 10}, "haskell": {"memory": 256, "time": 10}, "java": {"memory": 256, "time": 8}, "clojure": {"memory": 256, "time": 10}, "mono c#": {"memory": 256, "time": 8}, "c++11": {"memory": 256, "time": 5}, "octave": {"memory": 256, "time": 13}, "java8": {"memory": 256, "time": 8}}, "execution_time_limit": 5, "samples": [["4 2\n", "6"]], "execution_memory_limit": 256, "code_templates": {"asm32": "# put your asm32 code here", "shell": "# put your shell (bash) code here", "javascript": "// put your javascript (node.js) code here", "haskell 8.0": "main :: IO ()\n-- put your code here", "c++": "#include <iostream>\n\nint main() {\n  // put your code here\n  return 0;\n}", "asm64": "# put your asm64 code here", "ruby": "# put your ruby code here", "python3": "# put your python code here", "r": "# put your R code here", "rust": "fn main() {\n    // put your Rust code here\n}", "haskell 7.10": "main :: IO ()\n-- put your code here", "haskell": "main :: IO ()\n-- put your code here", "java": "class Main {\n  public static void main(String[] args) {\n    // put your code here\n  }\n}", "clojure": ";; put your clojure code here", "mono c#": "using System;\n\npublic class MainClass\n{\n    public static void Main()\n    {\n        // put your c# code here\n    }\n}", "c++11": "#include <iostream>\n\nint main() {\n  // put your code here\n  return 0;\n}", "octave": "% put your octave code here", "java8": "class Main {\n  public static void main(String[] args) {\n    // put your code here\n  }\n}"}}, "animation": null, "text": "<p>[Add a code challenge relvant to coding a hash map]</p><p>make them declare a hash map with certain objects? Think of something more interesting?<br></p>", "feedback_correct": "", "tests_archive": "/api/step-sources/121054/tests", "subtitle_files": [], "name": "code"}, "time": "2016-09-03T01:11:55.312487"}