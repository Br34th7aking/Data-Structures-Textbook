{"block": {"tests_archive": null, "feedback_correct": "", "subtitle_files": [], "text": "<span class=\"wysiwyg-color-green\"><span class=\"wysiwyg-color-black\"><p>So how do we go about inserting into a<b> </b><b><span class=\"wysiwyg-color-green\">Hash Map</span></b>? Let's look at the pseudocode for the \"insert\" operation of a<b> </b><b><span class=\"wysiwyg-color-green\">Hash Map</span></b> <span class=\"wysiwyg-color-green\"><span class=\"wysiwyg-color-black\">below</span></span>. Note that a <b><b><span class=\"wysiwyg-color-purple\"><b><span class=\"wysiwyg-color-green\">Hash Map</span></b></span></b></b> can be implemented using a <b><span class=\"wysiwyg-color-purple\">Hash Table</span></b> with any of the <b><span class=\"wysiwyg-color-red\">collision resolution strategies</span></b> we discussed. <br></p><p></p><pre><code class=\"python\"><b>insert(&lt;key,value&gt;): #</b>return true upon successful insertion<b>\n\n    </b>index = hashFunction(key) \n\n    # if this is a duplicate insertion\n    if <b>arr</b>[index] contains key:\n        remove tuple with same key at <b>arr</b>[index]\n\n    # insert the &lt;key, value&gt;\n<pre><code class=\"python\">    insert &lt;key,value&gt; at <b>arr</b>[index]\n</code></pre></code></pre><br><span class=\"wysiwyg-color-green\"><span class=\"wysiwyg-color-black\">With respect to insertion, originally, in a <b><span class=\"wysiwyg-color-purple\">Hash Table</span></b>, if a key that was being inserted already existed, we would abort the insertion. In a </span></span><span class=\"wysiwyg-color-black\"><b><span class=\"wysiwyg-color-green\">Hash Map</span></b></span><span class=\"wysiwyg-color-green\"><span class=\"wysiwyg-color-black\"><b> </b>however,<span class=\"wysiwyg-color-green\"><span class=\"wysiwyg-color-black\"> attempting to insert a key that already exists will <i>not</i> abort the insertion but rather will result in \nthe original value being overwritten with the new one.</span></span> </span></span><br><br><p>The pseudocode for the \"find\" operation of a<b> </b><b><span class=\"wysiwyg-color-green\">Hash Map</span></b> is provided below. Note that this \"find\" operation returns the <i>value</i> stored with the <b><span class=\"wysiwyg-color-blue\">key</span></b>, as opposed to a Boolean value as it did in the <b><span class=\"wysiwyg-color-purple\">Hash Table</span></b> implementation.<br></p><p><code class=\"cpp\"><b>\n</b></code></p><pre><code class=\"python\">find(key): #returns value stored with the key\n\n    index = hashFunction(key) \n\n    if <b>arr</b>[index] contains key:\n\n        return key's value</code></pre></span></span><br>", "feedback_wrong": "", "options": {}, "subtitles": {}, "name": "text", "source": null, "video": null, "animation": null}, "time": "2016-09-11T01:11:16.120588", "id": "121235"}