{"id": "122040", "time": "2016-09-02T18:29:11.285241", "block": {"animation": null, "text": "<p>In C++, <span class=\"wysiwyg-color-black\">a <b><span class=\"wysiwyg-color-purple\">Hash Table</span></b> is called an <a href=\"http://www.cplusplus.com/reference/unordered_set/unordered_set/\" rel=\"nofollow\"><span class=\"wysiwyg-font-tt\">unordered_set</span></a>. The name should be pretty intuitive because we are storing a\u00a0<i>set</i> of keys, and the set is <i>unordered</i>. Below is example C++ code to actually use a\u00a0</span><span class=\"wysiwyg-color-purple\"><b>Hash Table</b></span><b> </b><span class=\"wysiwyg-color-black\">would be:</span></p><p></p><pre><code class=\"cpp\">#include&lt;unordered_set&gt; // include the C++ implementation of a Hash Table\n#include&lt;string&gt;\n#include&lt;iostream&gt;\nusing namespace std;\n\nint main() {\n    unordered_set&lt;string&gt; animals = {\"Giraffe\", \"Polar Bear\", \"Toucan\"};\n}</code></pre><p></p><p>If we wanted to easily iterate over the keys\u00a0we stored, we could use an iterator. For example, we could add this to the end of <span class=\"wysiwyg-font-tt\">main()</span>:</p><pre><code><pre><code class=\"cpp\">for(auto it = animals.begin(); it != animals.end(); ++it) {\n    cout &lt;&lt; *it &lt;&lt; endl;\n}\n\n/* Output:\nToucan\nGiraffe\nPolar Bear\n*/</code></pre></code></pre><p></p><p>Equivalently, we could have used a for-each loop. For example,\u00a0we could add this to the end of <span class=\"wysiwyg-font-tt\">main()</span>:</p><p></p><pre><code class=\"cpp\">for(auto s : animals) {\n    cout &lt;&lt; s &lt;&lt; endl;\n}\n\n/* Output:\nToucan\nGiraffe\nPolar Bear\n*/</code></pre><br><p></p><p>Notice that the output above is unsorted, just as we expected! If you were to iterate over the elements of a\u00a0<b>Hash Table</b> and they\u00a0<i>happened</i> to be iterated over in sorted order, know that it is purely by chance. There is absolutely no guarantee that the elements will be sorted, and on the contrary, because of the fancy\u00a0<b><span class=\"wysiwyg-color-green\">hash functions</span></b> used to help minimize collisions, they will actually most likely not be.</p><p><b><span class=\"wysiwyg-color-red\">Note: </span></b>If we wanted to insert a key that was an instance of a custom class, we would need to overload C++'s <b><span class=\"wysiwyg-color-green\">hash function</span> </b>and <b>key equality </b>methods<b> </b>in order to have the <span class=\"wysiwyg-font-tt\">unordered_set</span> be able to properly <b><span class=\"wysiwyg-color-blue\">hash</span></b> the custom class.<br></p>", "options": {}, "feedback_correct": "", "source": null, "subtitle_files": [], "name": "text", "feedback_wrong": "", "subtitles": {}, "tests_archive": null, "video": null}}