{"id": "122113", "block": {"subtitles": {}, "source": null, "video": null, "feedback_wrong": "", "options": {}, "animation": null, "text": "So how do we go about actually implementing this seemingly complex <b><span class=\"wysiwyg-color-red\">collision resolution strategy</span></b>? Here is the pseudo-code to implement <b><span class=\"wysiwyg-color-blue\">Cuckoo Hashing </span></b>when inserting a key <i><b>k</b></i>, with two tables T_1 and T_2 of size <i><b>M</b></i> ,with backing arrays of <b>arr1 </b>and <b>arr2</b> respectively, using a <b><span class=\"wysiwyg-color-green\">hash function </span></b><span class=\"wysiwyg-color-green\"><span class=\"wysiwyg-color-black\">H_1(<b><i>k</i></b>) and H_2(<b>k</b>) respectively:</span></span><p></p><pre><code class=\"python\">insert_CuckooHash(Key <b>k</b>, int <b>M</b>): #return true upon successful insertion\n\n    index1 = H_1(<b>k</b>)\n    index2 = H_2(<b>k</b>) \n\n    # check for duplicate insertions\n    if <b>arr1</b>[index1] == <b>k</b> or <b>arr2</b>[index2] == <b>k</b>:\n        return false\n\n    current = <b>k</b>\n\n    # loop for a limited amount of time (we will discuss details in the next step) \n    while looping less than MAX times:\n\n        # insert until the slot inserted in is empty\n\n        oldValue = arr1[H_1(current)] # save the value currently in the slot\n        arr1[H_1(current)] = current  # insert the new key\n\n        if oldValue == NULL: # if slot was empty, we are done inserting\n            return true\n\n        current = oldValue # time to re-insert what was kicked out\n\n        oldValue = arr2[H_2(current)] # save the value currently in the slot\n        arr2[H_2(current)] = current  # insert the new key\n\n        if oldValue == NULL: # if slot was empty, we are done inserting\n            return true\n\n     #while loop ended, insertion failed, need to rehash the table\n     #re-hash is commonly done by introducing two new hash functions\n     return false\n\n</code></pre><br><b><span class=\"wysiwyg-color-red\">STOP and Think:</span></b> Is <b><span class=\"wysiwyg-color-blue\">Cuckoo Hashing</span></b> considered <b>Open Addressing</b>?<br><p></p>", "feedback_correct": "", "tests_archive": null, "subtitle_files": [], "name": "text"}, "time": "2016-09-03T01:11:39.628304"}