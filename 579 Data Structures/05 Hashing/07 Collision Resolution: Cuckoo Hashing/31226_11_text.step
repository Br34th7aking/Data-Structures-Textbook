{"time": "2016-09-05T12:32:21.160712", "block": {"tests_archive": null, "animation": null, "feedback_correct": "", "subtitles": {}, "source": null, "text": "Hopefully by now you are convinced that <b><span class=\"wysiwyg-color-blue\">Cuckoo Hashing</span></b> is by far the most optimized open addressing <b><span class=\"wysiwyg-color-red\">collision resolution strategy</span> </b>that\n we have discussed. It provides us a guaranteed worst-case constant time\n complexity in operations (find and delete) that previous strategies \nwere unable to guarantee. Because of the complexity of <b><span class=\"wysiwyg-color-blue\">Cuckoo Hashing</span></b> however, there are many more analysis and proofs that this lesson has left out. If you are super curious and have the desire to skim/read the original 26 page paper that describes the capabilities of <b><span class=\"wysiwyg-color-blue\">Cuckoo Hashing</span></b> beyond what we have described in this lesson, then you can find it <a rel=\"nofollow\" title=\"Link: http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.25.4189&amp;rep=rep1&amp;type=pdf\" href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.25.4189&amp;rep=rep1&amp;type=pdf\">here</a>. There is also another much shorter and accessible paper that is intended for undergraduates about proving the efficiency of <b><span class=\"wysiwyg-color-blue\">Cuckoo Hashing</span></b> <a rel=\"nofollow\" title=\"Link: http://www.itu.dk/people/pagh/papers/cuckoo-undergrad.pdf\" href=\"http://www.itu.dk/people/pagh/papers/cuckoo-undergrad.pdf\">here</a>.<br>", "options": {}, "subtitle_files": [], "name": "text", "video": null, "feedback_wrong": ""}, "id": "121622"}