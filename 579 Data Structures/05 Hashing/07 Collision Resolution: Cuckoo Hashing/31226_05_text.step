{"id": "121818", "time": "2016-09-01T21:52:11.563691", "block": {"subtitle_files": [], "feedback_wrong": "", "options": {}, "name": "text", "subtitles": {}, "tests_archive": null, "source": null, "text": "In the previous step, we saw that the bulk of the algorithm ran inside a while loop that was bounded by a MAX limit. So why do we even have a loop in the first place?<br><br>You may have noticed within the second visualization we provided<span class=\"wysiwyg-color-black\">,</span><b> </b>inserting\u00a0a <b><span class=\"wysiwyg-color-blue\">key</span></b> started taking longer and longer; inserting the integer <b><span class=\"wysiwyg-color-blue\">key</span>\u00a0</b>17 in that example took 4 iterations of hashing.\u00a0 <br><br>Note: that in order to fully optimize cuckoo hashing, the second hash function should return a <i>different</i>\n hash value for keys that have the same initial hash value. If we do not\n ensure this, then we risk facing a cycle resulting from collisions much\n earlier on. ", "feedback_correct": "", "video": null, "animation": null}}