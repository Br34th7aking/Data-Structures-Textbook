{"id": "122160", "block": {"subtitles": {}, "source": null, "video": null, "feedback_wrong": "", "options": {}, "animation": null, "text": "<p>Specifically, the reason why we are in an infinite cycle in the previous visualization is because there are no empty <b><span class=\"wysiwyg-color-purple\">Hash Table</span></b> slots in either\u00a0$ T_1\u00a0 $or $ T_2\u00a0\u00a0\u00a0\u00a0$ that a <b><span class=\"wysiwyg-color-blue\">key</span> </b>could potentially hash to, like so: <br></p><img alt=\"\" src=\"https://ucarecdn.com/9c4a42e7-d3d3-4d9d-b680-e489138eb84f/\" title=\"Image: https://ucarecdn.com/9c4a42e7-d3d3-4d9d-b680-e489138eb84f/\" height=\"457\" width=\"535\"><br>Consequently, unless\u00a0<b><span class=\"wysiwyg-color-blue\">Cuckoo Hashing</span></b> has a limit as to how many times it attempts to move a <b><span class=\"wysiwyg-color-blue\">key</span></b>, the algorithm will never stop. As seen in the pseudocode in the previous step, when a\u00a0<b>key</b>\ufeff causes an infinite loop and the insertion fails, we must then resort to re-hashing.\u00a0 <br><br>More formally, an infinite cycle is said to occur if the inserting <b><span class=\"wysiwyg-color-blue\">key</span></b> <i>k</i>\u00a0<i></i>revisits index1 =\u00a0$ H_1(k) $ after it has already been inserted.<br>", "feedback_correct": "", "tests_archive": null, "subtitle_files": [], "name": "text"}, "time": "2016-09-03T01:11:41.379705"}