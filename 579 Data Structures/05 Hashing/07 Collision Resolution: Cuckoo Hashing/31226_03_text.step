{"block": {"tests_archive": null, "feedback_correct": "", "subtitle_files": [], "text": "<p>As mentioned in the previous step,<b> <span class=\"wysiwyg-color-blue\">Cuckoo Hashing </span></b>was traditionally invented with the use of two <b><span class=\"wysiwyg-color-purple\">Hash Tables</span></b> simultaneously, in order decrease the probability of collisions in each table. Formally, the <b><span class=\"wysiwyg-color-green\">hash function</span></b> $  H_1(k)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0$ hashes <b><span class=\"wysiwyg-color-blue\">keys</span> </b><i>only</i> to the <i>first</i> <b><span class=\"wysiwyg-color-purple\">Hash Table</span></b> $ T_1\u00a0\u00a0$ and the <b><span class=\"wysiwyg-color-green\">hash function</span></b> $   H_2(k)\u00a0\u00a0$ hashes <b><span class=\"wysiwyg-color-blue\">keys</span> </b><i>only</i> to the<i> second</i> <b><span class=\"wysiwyg-color-purple\">Hash Table<span class=\"wysiwyg-color-black\">\u00a0</span></span></b><span class=\"wysiwyg-color-purple\"><span class=\"wysiwyg-color-black\">$ T_2 $<span></span><span></span><span></span></span></span><b><span class=\"wysiwyg-color-purple\"><span class=\"wysiwyg-color-black\">. </span></span></b><span class=\"wysiwyg-color-purple\"><span class=\"wysiwyg-color-black\">A <b><span class=\"wysiwyg-color-blue\">key</span></b> <i>k </i>starts with hashing to\u00a0$  T_1   $ and if later another arbitrary<span class=\"wysiwyg-color-blue\"> <b>key</b></span>\u00a0<i>j</i> collides with <b><span class=\"wysiwyg-color-blue\">key</span></b> <i>k</i>, <b><span class=\"wysiwyg-color-blue\">key </span></b><i>k</i> then hashes to $ T_2 $. <b>However</b>, a key can also get kicked out of $ T_2\u00a0\u00a0\u00a0$ and in that case it hashes back to $ T_1 $, with the hope that a <b><span class=\"wysiwyg-color-blue\">key</span></b> is no longer occupying that initial spot. We admit that this may sound confusing, so we have provided another visualization below to see how the <b><span class=\"wysiwyg-color-blue\">keys</span></b> jump around between the two tables.</span></span> Use the arrows in the bottom left to walk through the slides. </p><p> </p><p><iframe src=\"https://docs.google.com/presentation/d/1enss8FYHLN5VfPXA1ODzV0rxnr62lFrUrlURqKnkaj8/embed?start=false&amp;loop=false&amp;delayms=60000\" width=100% height=\"550\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe><br></p><p><b><span class=\"wysiwyg-color-red\">STOP and Think: </span></b><span class=\"wysiwyg-color-red\"><span class=\"wysiwyg-color-black\">Is a <i>\ufeffnew</i> inserting <b><span class=\"wysiwyg-color-blue\">key</span></b> guaranteed to always end up in the index returned by the primary\u00a0<b><span class=\"wysiwyg-color-green\">hash function</span></b> $ H_1(k) $? </span></span><br></p>", "feedback_wrong": "", "options": {}, "subtitles": {}, "name": "text", "source": null, "video": null, "animation": null}, "time": "2016-09-11T01:11:03.547775", "id": "121814"}