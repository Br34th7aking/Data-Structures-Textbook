{"id": "121891", "block": {"feedback_wrong": "", "tests_archive": null, "text": "<p><b><span class=\"wysiwyg-color-purple\">EXERCISE BREAK:</span></b>\u00a0Assume that, if you given a node\u00a0<i>u</i> and a character\u00a0<i>c</i>, you can access the outgoing edge of\u00a0<i>u</i> labeled by\u00a0<i>c</i> (or determine that no such edge exists) in O(1) time. Given this assumption, what is the worst-case <b>time</b> complexity of the find, insert, and remove algorithms described on the previous step?</p><p>In the answer choices,\u00a0<i>n</i> denotes the number of words stored in the\u00a0<b><span class=\"wysiwyg-color-red\">Multiway Trie</span></b>, and\u00a0<i>k</i> denotes the length of the longest work in the\u00a0<b><span class=\"wysiwyg-color-red\">Multiway Trie</span></b>.</p><p></p>", "subtitle_files": [], "options": {}, "name": "choice", "subtitles": {}, "animation": null, "feedback_correct": "", "source": {"is_multiple_choice": false, "options": [{"is_correct": false, "feedback": "", "text": "O(1)"}, {"is_correct": false, "feedback": "", "text": "O(log <i>n</i>)"}, {"is_correct": false, "feedback": "", "text": "O(log <i>k</i>)"}, {"is_correct": false, "feedback": "", "text": "O(<i>n</i>)"}, {"is_correct": true, "feedback": "", "text": "O(<i>k</i>)"}, {"is_correct": false, "feedback": "", "text": "O(<i>n</i> log <i>k</i>)"}, {"is_correct": false, "feedback": "", "text": "O(<i>k</i> log <i>n</i>)"}], "preserve_order": true, "is_always_correct": false, "is_html_enabled": true, "sample_size": 7}, "video": null}, "time": "2016-09-04T00:51:27.790029"}