{"id": "121825", "block": {"name": "text", "feedback_correct": "", "animation": null, "subtitle_files": [], "video": null, "feedback_wrong": "", "options": {}, "source": null, "text": "<p>The algorithms behind the insert, remove, and find operations of a\u00a0<b><span class=\"wysiwyg-color-red\">Multiway Trie</span></b> are actually very simple. To <b>find</b> a word, simply start at the root and, for each letter of the word, follow the corresponding edge of the current node. If the edge you need to traverse does not exist, the word does not exist in the trie. Also, even if you are able to traverse all of the required edges, if the node you land on is not labeled as a \"word node,\" the word does not exist in the trie. A word\u00a0<i>only</i> exists in the trie if you are able to traverse all of the required edges and the node you reach at the end of the traversal is labeled as a \"word node\".</p><p>Below is a simple example, where \u03a3 = {a, ..., z}, on which we perform the find operation on the word \"ate\". Note that, even though there exists a valid path from the root to the word \"at\" (which is a prefix of \"ate\"), the word \"at\" does not appear in our <b><span class=\"wysiwyg-color-red\">Multiway Trie</span></b> because the node we reach after following the path labeled by \"at\" is not labeled as a \"word node\".</p><p><img alt=\"\" src=\"https://ucarecdn.com/3014338e-4781-4eb7-a411-a42167c507c8/\"></p>", "subtitles": {}, "tests_archive": null}, "time": "2016-09-15T15:05:11.637624"}