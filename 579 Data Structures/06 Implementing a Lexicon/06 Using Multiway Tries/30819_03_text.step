{"block": {"feedback_wrong": "", "subtitles": {}, "animation": null, "name": "text", "text": "<p>The algorithms behind the insert, remove, and find operations of a\u00a0<b><span class=\"wysiwyg-color-red\">Multiway Trie</span></b> are actually very simple. To <b>find</b> a word, simply start at the root and, for each letter of the word, follow the corresponding edge of the current node. If the edge you need to traverse does not exist, the word does not exist in the trie. Also, even if you are able to traverse all of the required edges, if the node you land on is not labeled as a \"word node,\" the word does not exist in the trie. A word\u00a0<i>only</i> exists in the trie if you are able to traverse all of the required edges and the node you reach at the end of the traversal is labeled as a \"word node\".</p><p>Below is a simple example, where \u03a3 = {a, ..., z}, on which we perform the find operation on the word \"ate\". Note that, even though there exists a valid path from the root to the word \"at\" (which is a prefix of \"ate\"), the word \"at\" does not appear in our multiway trie because the node we reach after following the path labeled by \"at\" is not labeled as a \"word node\".</p><p><img alt=\"\" src=\"https://ucarecdn.com/3014338e-4781-4eb7-a411-a42167c507c8/\" title=\"Image: https://ucarecdn.com/3014338e-4781-4eb7-a411-a42167c507c8/\"></p><p>To <b>remove</b> a word, simply follow the find algorithm. If the find algorithm fails, the word does not exist in the trie, meaning nothing has to be done. If the find algorithm succeeds, simply remove the \"word node\" label from the node at which the find algorithm terminates. In the example below, we remove the word \"ate\" from the trie above by simply traversing the path spelled by \"ate\" and removing the label from the final node on the path:</p><p><img alt=\"\" src=\"https://ucarecdn.com/720cb00f-7b83-48a8-a763-1941aca10584/\" title=\"Image: https://ucarecdn.com/720cb00f-7b83-48a8-a763-1941aca10584/\"></p><p>To <b>insert</b> a word, simply attempt to follow the find algorithm. If, at any point, the edge we need to traverse does not exist, simply create the edge (and node to which it should point), and continue. In the example below, we add the word \"ant\" to the trie above:</p><p><img src=\"https://ucarecdn.com/0ba2809d-8351-45c6-a424-26d231832c5b/\" title=\"Image: https://ucarecdn.com/0ba2809d-8351-45c6-a424-26d231832c5b/\"></p>", "tests_archive": null, "source": null, "subtitle_files": [], "options": {}, "feedback_correct": "", "video": null}, "id": "121825", "time": "2016-09-06T23:48:59.427061"}