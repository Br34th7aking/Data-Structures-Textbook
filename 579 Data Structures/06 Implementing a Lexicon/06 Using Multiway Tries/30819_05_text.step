{"block": {"tests_archive": null, "feedback_correct": "", "subtitle_files": [], "text": "<p>Below is formal pseudocode for the three operations of a\u00a0<b><span class=\"wysiwyg-color-red\">Multiway Trie</span></b> that we mentioned previously. In the pseudocode, we denote the\u00a0<b><span class=\"wysiwyg-color-red\">Multiway Trie's</span></b> root node as the variable <span class=\"wysiwyg-font-tt\">root</span>.</p><p></p><pre><code class=\"cpp\"><b>find(word): // find word in this Multiway Trie\n</b>    curr = root\n    for each character c in word:\n        if curr does not have an outgoing edge labeled by c:\n            return False\n        else:\n            curr = child of curr along edge labeled by c\n    if curr is a word-node:\n        return True\n    else:\n        return False</code></pre><p></p><p></p><pre><code class=\"cpp\"><b>remove(word): // remove word from this Multiway Trie\n</b>    curr = root\n    for each character c in word:\n        if curr does not have an outgoing edge labeled by c:\n            return\n        else:\n            curr = child of curr along edge labeled by c\n    if curr is a word-node:\n        remove the word-node label of curr</code></pre><p></p><p></p><pre><code class=\"cpp\"><b>insert(word): // insert word into this Multiway Trie\n</b>    curr = root\n    for each character c in word:\n        if curr does not have an outgoing edge labeled by c:\n            create a new child of curr with the edge labeled by c\n        curr = child of curr along edge labeled by c\n    if curr is not a word-node:\n        label curr as a word-node</code></pre>", "feedback_wrong": "", "options": {}, "subtitles": {}, "name": "text", "source": null, "video": null, "animation": null}, "time": "2016-09-11T01:12:05.891934", "id": "121827"}