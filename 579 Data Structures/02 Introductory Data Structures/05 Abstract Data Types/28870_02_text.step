{"block": {"animation": null, "source": null, "text": "<p>We just introduced a term, \"abstract data type,\" but this course is about \"data structures,\" so what's the difference? The two terms sound so similar, but they actually have very different implications. As I \u00a0mentioned, an\u00a0<b><span class=\"wysiwyg-color-green\">Abstract Data Type</span></b> is defined by what functions it should be able to perform, but it does not at all depend on how it actually goes about doing those functions (i.e., it is not implementation-specific). A\u00a0<b><span class=\"wysiwyg-color-blue\">Data Structure</span></b>, on the other hand, is a concrete representation of data: it consists of all of the nuts and bolts behind how the data are represented (how they are stored in memory, algorithms for performing various operations, etc.).</p><p>For example, say a user wants us to design a \"set\" container to contain integers. The user decide that this container should have the following functions:</p><p></p><ul><li>An \"insert\" function that will return True upon insertion of a new element, or False if the element already exists<br></li><li>A \"find\" function that will return True if an element exists, otherwise False</li><li>A \"union\" function that will add all of the elements from another \"set\" into this \"set\"</li></ul><p>The user has successfully described what functionality the \"set\" container will have, without any implementation-specific details (i.e.,\u00a0<i>how</i> those three functions described will work). Consequently, this \"set\" container is an <b><span class=\"wysiwyg-color-green\">Abstract Data Type</span></b>. It is now up to us, the programmers, to figure out a way to <i>actually</i>\ufeff implement this  <b><span class=\"wysiwyg-color-green\">Abstract Data Type</span>.</b><br></p><p>So can we figure out the time complexities of any of the three functions described in the \"set\" container above? Unfortunately, no! Because an <b><span class=\"wysiwyg-color-green\">Abstract Data Type</span></b>\u00a0<i>only</i> describes functionality, not implementation, the time complexities of these functions completely depends on how the programmer chooses to\u00a0<i>implement</i> the \"set\" (i.e., what <b><span class=\"wysiwyg-color-blue\">Data Structure</span></b> we choose to use to back this container).</p><p></p>", "feedback_correct": "", "feedback_wrong": "", "video": null, "name": "text", "subtitles": {}, "subtitle_files": [], "options": {}, "tests_archive": null}, "id": "110678", "time": "2016-09-20T01:08:21.432418"}