{"id": "115177", "block": {"subtitles": {}, "source": {"preserve_order": true, "is_html_enabled": true, "options": [{"is_correct": false, "text": "O(1)", "feedback": ""}, {"is_correct": false, "text": "O(log <i>n</i>)", "feedback": ""}, {"is_correct": false, "text": "O(<i>n</i>)", "feedback": ""}, {"is_correct": false, "text": "O(<i>n</i> * log <i>n</i>)", "feedback": ""}, {"is_correct": false, "text": "O(<i>n</i>\u00b2)", "feedback": ""}, {"is_correct": true, "text": "Not enough information", "feedback": ""}], "sample_size": 6, "is_always_correct": false, "is_multiple_choice": false}, "video": null, "feedback_wrong": "", "options": {}, "animation": null, "text": "<p><b></b>\n\n<b><span class=\"wysiwyg-color-purple\">EXERCISE BREAK:</span>\u00a0</b>What is the worst-case time complexity of adding an element into a\u00a0<b>Queue</b>, given that we are using a\u00a0<b>Deque</b>\ufeff as our backing structure in our implementation?</p><p></p>", "feedback_correct": "", "tests_archive": null, "subtitle_files": [], "name": "choice"}, "time": "2016-09-03T01:07:28.220054"}