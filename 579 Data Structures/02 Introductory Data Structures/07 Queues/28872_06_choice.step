{"id": "115177", "time": "2016-09-01T21:47:59.587499", "block": {"subtitle_files": [], "feedback_wrong": "", "options": {}, "name": "choice", "subtitles": {}, "tests_archive": null, "source": {"is_html_enabled": true, "options": [{"text": "O(1)", "feedback": "", "is_correct": false}, {"text": "O(log <i>n</i>)", "feedback": "", "is_correct": false}, {"text": "O(<i>n</i>)", "feedback": "", "is_correct": false}, {"text": "O(<i>n</i> * log <i>n</i>)", "feedback": "", "is_correct": false}, {"text": "O(<i>n</i>\u00b2)", "feedback": "", "is_correct": false}, {"text": "Not enough information", "feedback": "", "is_correct": true}], "is_multiple_choice": false, "preserve_order": true, "is_always_correct": false, "sample_size": 6}, "text": "<p><b></b>\n\n<b><span class=\"wysiwyg-color-purple\">EXERCISE BREAK:</span>\u00a0</b>What is the worst-case time complexity of adding an element into a\u00a0<b>Queue</b>, given that we are using a\u00a0<b>Deque</b>\ufeff as our backing structure in our implementation?</p><p></p>", "feedback_correct": "", "video": null, "animation": null}}