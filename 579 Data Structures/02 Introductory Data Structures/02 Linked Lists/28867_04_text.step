{"id": "110909", "block": {"feedback_correct": "", "name": "text", "feedback_wrong": "", "text": "<p>\n\nAs you may have inferred in the previous step, to find an arbitrary element in a <b><span class=\"wysiwyg-color-blue\">Linked List</span></b>, because we don't have direct access to the internal nodes (we only have direct access to <i>head</i>\u00a0and <i>tail</i>), we have to iterate through all <i>n</i>\u00a0elements in the worst case.</p><p>Below is an example <b><span class=\"wysiwyg-color-blue\">Linked List</span></b>, in which we will find the element at index\u00a0<i>i</i> = 2 (where indexing starts at\u00a0<i>i</i> = 0):</p><p><img src=\"https://ucarecdn.com/1b7e2cbf-33d4-46f4-a226-37bbe3336cc3/\" alt=\"\"></p><p>\n\n<b><span class=\"wysiwyg-color-red\">STOP and Think:</span></b>\u00a0Notice that when we look for an element in the middle of the <b><span class=\"wysiwyg-color-blue\">Linked List</span></b>, we start at the <i>head</i> and step forward. This works fine if the index is towards the beginning of the list, but what about when the index of interest is large (i.e., closer to <i>n</i>)? Can we speed things up?\n\n<br></p>", "subtitle_files": [], "source": null, "animation": null, "video": null, "tests_archive": null, "options": {}, "subtitles": {}}, "time": "2016-09-07T23:33:52.298281"}