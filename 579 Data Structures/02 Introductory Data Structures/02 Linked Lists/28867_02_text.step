{"id": "110722", "block": {"subtitles": {}, "source": null, "video": null, "feedback_wrong": "", "options": {}, "animation": null, "text": "<p>A\u00a0<b><span class=\"wysiwyg-color-blue\">Linked List</span></b> is a data structure composed of\u00a0<b>nodes</b>: containers that each hold a single element. These nodes are \"linked\" to one another via pointers. Typically, we maintain one global\u00a0<b><i>head</i> pointer</b> (i.e., a pointer to the first node in the Linked List) and one global\u00a0<b><i>tail</i> pointer</b> (i.e., a pointer to the last node in a Linked List). These are the only two nodes we have direct access too, and all other nodes can only be accessed by traversing pointers starting at either the head or the tail node.</p><p>In a\u00a0<b>Singly-Linked List</b>, each node only has a pointer pointing to the node directly after it (for internal nodes) or a null pointer (for the tail node). As a result, we can only traverse a Singly-Linked List in one direction.</p><p><img src=\"https://ucarecdn.com/1d56e798-f9a6-43d6-91ed-2c5b0dc2d85c/\" alt=\"\"></p><p>In a\u00a0<b>Doubly-Linked List</b>, each node has two pointers: one pointing to the node directly after it and one pointing to the node directly before it (of course, the head and the tail nodes only have a single pointer each). As a result, we can traverse a Doubly-Linked List in both directions.</p><p><img src=\"https://ucarecdn.com/b360cb44-d18e-4e60-8b63-7e40ac991d53/\" alt=\"\"></p>", "feedback_correct": "", "tests_archive": null, "subtitle_files": [], "name": "text"}, "time": "2016-09-03T01:06:32.808654"}