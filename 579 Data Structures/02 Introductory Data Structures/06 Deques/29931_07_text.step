{"id": "115174", "block": {"name": "text", "feedback_correct": "", "animation": null, "subtitle_files": [], "video": null, "feedback_wrong": "", "options": {}, "source": null, "text": "<p>In summation, assuming we don't care too much about access to the elements in the middle of the <b>Deque</b> (which is typically the case), our best option is to use a <b><span class=\"wysiwyg-color-blue\">Linked List</span></b> to implement our <b>Deque</b>. In doing so, we can achieve <b>O(1)</b> time for all six of the <b>Deque</b> functions we described previously without wasting any extra memory leaving space for future insertions (which we do with an\u00a0<b><span class=\"wysiwyg-color-green\">Array List</span></b>).</p><p>We already discussed how <b>Deques</b> can be used to implement browser history functions of web browsers, but it turns out that <b>Deques</b> can also be useful in implementing\u00a0<i>other</i> <b><span class=\"wysiwyg-color-green\">Abstract Data Types</span></b>. In the next sections, we will discuss two other very useful ADTs that we can use a <b>Deque</b> to implement.</p>", "subtitles": {}, "tests_archive": null}, "time": "2016-09-15T14:59:06.092685"}