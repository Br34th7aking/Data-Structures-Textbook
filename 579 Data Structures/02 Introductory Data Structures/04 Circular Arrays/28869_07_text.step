{"id": "114928", "block": {"subtitles": {}, "source": null, "video": null, "feedback_wrong": "", "options": {}, "animation": null, "text": "<p>We briefly discussed the insertion algorithm at a higher level, but let's formalize it. In the following pseudocode, assume our <b><span class=\"wysiwyg-color-purple\">Circular Array</span></b> has a backing array named <span class=\"wysiwyg-font-tt\">array</span> (which has length <span class=\"wysiwyg-font-tt\">array.length</span>), an integer <span class=\"wysiwyg-font-tt\">n</span> that keeps track of the number of elements added to the <b><span class=\"wysiwyg-color-purple\">Circular Array</span></b>, and two indices <span class=\"wysiwyg-font-tt\">head</span> and <span class=\"wysiwyg-font-tt\">tail</span>. For our purposes, let's assume you can only add elements to the front or back of the <b><span class=\"wysiwyg-color-purple\">Circular Array</span></b> to keep the problem relatively simple.</p><p></p><pre><code class=\"cpp\"><b>insertFront(element): // inserts element at the front of the Circular Array\n</b>    // check array size\n    if n == array.length:\n        newArray = empty array of length 2*array.length\n        for i from 0 to n-1:       // copy all elements from array to newArray\n            newArray[i] = array[(head+i)%array.length]\n        array = newArray           // replace array with newArray\n        head = 0                   // fix head and tail indices\n        tail = n-1\n\n    // insertion algorithm\n    head = head - 1                // decrement head index\n    if head == -1:                 // if we went out of bounds, wrap around\n        head = array.length-1\n    array[head] = element          // perform insertion\n    n = n + 1                      // increment size</code></pre><p></p><p></p><pre><code class=\"cpp\"><b>insertBack(element): // inserts element at the back of the Circular Array\n</b>    // check array size\n    if n == array.length:\n        newArray = empty array of length 2*array.length\n        for i from 0 to n-1:       // copy all elements from array to newArray\n            newArray[i] = array[(head+i)%array.length]\n        array = newArray           // replace array with newArray\n        head = 0                   // fix head and tail indices\n        tail = n-1\n\n    // insertion algorithm\n    tail = tail + 1                // increment tail index\n    if tail == array.length:       // if we went out of bounds, wrap around\n        tail = 0\n    array[tail] = element          // perform insertion\n    n = n + 1                      // increment size</code></pre><p></p><p><b><span class=\"wysiwyg-color-red\">STOP and Think:</span></b> How could we generalize this idea to allow for insertion into the middle of the <b><span class=\"wysiwyg-color-purple\">Circular Array</span></b>?</p>", "feedback_correct": "", "tests_archive": null, "subtitle_files": [], "name": "text"}, "time": "2016-09-03T01:07:03.874951"}