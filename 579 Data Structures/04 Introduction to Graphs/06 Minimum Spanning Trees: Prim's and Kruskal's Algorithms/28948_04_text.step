{"block": {"tests_archive": null, "feedback_correct": "", "subtitle_files": [], "text": "<p>So how do we go about algorithmically finding spanning trees? This problem is actually very easy! All we need to do is run a single-source shortest-path algorithm, such as <b><span class=\"wysiwyg-color-green\">Breadth First Search</span></b>. We can pick any vertex to run the shortest-path algorithm on. Once the algorithm is finished executing, all the \"previous\" fields of the vertex would lead us through a path that would create a <b><span class=\"wysiwyg-color-red\">spanning tree</span></b>.</p><p>For example, take the graph below as an example:</p><p><img height=\"117\" alt=\"\" width=\"369\"></p><p><img height=\"161\" src=\"https://ucarecdn.com/8f1e80bd-83a5-4379-bb3b-304946521224/\" width=\"350\" title=\"Image: https://ucarecdn.com/8f1e80bd-83a5-4379-bb3b-304946521224/\"></p><p>Arbitrarily starting at vertex E and breaking ties by giving priority to the smallest letter of the alphabet, <b><span class=\"wysiwyg-color-green\">BFS</span></b> would uncover the vertices in the order: E (previous null) \u2192 A (previous E) \u2192 F (previous E) \u2192 B (previous A) \u2192 G (previous B) \u2192 C (previous G) \u2192 H (previous G)\u2192 D (previous C).</p><p>Following the discovered pathway above, we would thus get an assembled <span class=\"wysiwyg-color-purple\"><b><span class=\"wysiwyg-color-red\">spanning tree</span></b></span> that looks like this:</p><img height=\"162\" src=\"https://ucarecdn.com/e0e3c456-02a5-47c0-887d-39e3de9af39d/\" width=\"351\" title=\"Image: https://ucarecdn.com/e0e3c456-02a5-47c0-887d-39e3de9af39d/\"><br>So why is <span class=\"wysiwyg-color-green\"><b>BFS</b></span> able to produce a valid spanning tree? The answer lies behind the idea that <b><span class=\"wysiwyg-color-green\">BFS</span></b> is in charge of finding a single shortest path from one vertex to all other vertices and therefore will produce no cycles in its output \u2014otherwise there would be more than 1 path to get to a vertex\u2014 and thus a <b><span class=\"wysiwyg-color-blue\">tree</span></b> that covers all vertices. <br><br>", "feedback_wrong": "", "options": {}, "subtitles": {}, "name": "text", "source": null, "video": null, "animation": null}, "time": "2016-09-11T01:09:43.560149", "id": "116668"}