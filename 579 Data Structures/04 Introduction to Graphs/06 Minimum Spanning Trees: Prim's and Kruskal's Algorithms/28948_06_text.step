{"id": "116682", "time": "2016-09-02T18:28:35.062482", "block": {"animation": null, "text": "<p>As mentioned, <b><span class=\"wysiwyg-color-blue\">Prim's Algorithm</span></b> starts with a specified starting vertex. While the growing <b><span class=\"wysiwyg-color-red\">Minimum Spanning Tree</span></b> does not connect <i>all </i>vertices, <span class=\"wysiwyg-color-blue\"><b>Prim's Algorithm</b></span> adds the edge that has the least cost from any vertex in the spanning tree that has been built so far. <br></p><p>More formally,</p><ol><li>Let <b><i>V</i> </b>be the set of all vertices, <b><i>S</i></b> be the empty set, and <b><i>A</i> </b>be the empty set. Choose any vertex <i>r </i>to be the root of our spanning tree; set <b><i>S</i> </b>= {<i>r</i>} and <b><i>V</i></b> = <b><i>V</i></b> - {<i>r</i>} (i.e., remove <i>r</i> from set <b><i>V</i></b>). <br></li><li>Find the least weight edge, <i>e</i>, such that one endpoint,<i> v\u2081 </i>, is in <b><i>S</i> </b>and another, <i>v\u2082 </i>, is in <b><i>V</i> </b>\\ <b><i>S</i></b> (i.e., an edge that stems from the spanning tree being built so far, but doesn't create any cycles). Note: The notation  <b><i>V</i> </b>\\ <b><i>S</i></b> simply means <b><i>V</i> </b>- <b><i>S</i></b> (i.e., removing all of <b><i>S</i></b>'s elements from <b><i>V</i></b>). <br><ul><li>\u00a0Set <b><i>A</i></b> =<b> <i>A</i></b><i> </i>+ {<i>e</i>}, <b><i>S</i> </b>= <b><i>S</i></b> + {<i>v\u2082</i>}, and <b><i>V</i></b> = <b><i>V</i></b> - {<i>v\u2082</i>} (i.e., Add that edge to <b><i>A</i>, </b>add its other vertex endpoint to <b><i>S</i></b>, and remove that endpoint from the set of all \"untouched\" vertices, <b><i>V</i></b>). <br></li></ul></li><li>If <i> </i><b><i>V</i> </b>\\ <b><i>S</i></b> = NULL (i.e., once <b><i>S</i></b> contains all vertices), then output <b>(<i>S</i>,<i>A</i>)</b> as the two sets of vertices and edges that define our <b><span class=\"wysiwyg-color-red\">MST</span></b><span class=\"wysiwyg-color-purple\">. </span>Otherwise, our <b><span class=\"wysiwyg-color-red\">MST</span></b> clearly doesn't cover all vertices and so we must repeat step 2 above. </li></ol><p>Below is an animation of how<b> <span class=\"wysiwyg-color-blue\">Prim's Algorithm </span></b>chooses which vertices and edges to use to build the <b><span class=\"wysiwyg-color-red\">Minimum Spanning Tree</span></b>. Use the arrows in the bottom left to step through the slides. <br></p><br>\r\n<p><iframe src=\"https://docs.google.com/presentation/d/1UgSkUkHOehR0g2CpwMi6d4BZgMtjNcg5espVvJOc9J4/embed?start=false&amp;loop=false&amp;delayms=60000\" width=100% height=\"550\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe></p>", "options": {}, "feedback_correct": "", "source": null, "subtitle_files": [], "name": "text", "feedback_wrong": "", "subtitles": {}, "tests_archive": null, "video": null}}