{"id": "116299", "block": {"feedback_correct": "", "name": "text", "feedback_wrong": "", "text": "<p>As we've seen, <b><span class=\"wysiwyg-color-purple\">Dijkstra's Algorithm</span></b> is able to solve the shortest path problem in weighted graphs, something that <b><span class=\"wysiwyg-color-green\">BFS </span></b>can't always do. However, what cost do we face when running this more capable algorithm? In other words, what is the worst-case time complexity of <b><span class=\"wysiwyg-color-purple\">Djikstra\u2019s Algorithm</span></b>?</p><p>Let's look at the major steps in the algorithm to figure this out:</p><div><div><ul><li>Initializing all the fields in a vertex (distance, previous, done): there are |V| such elements, so we have a worst-case time complexity of <b>O(|</b><i><b>V</b></i><b>|)</b> here</li></ul></div><div><ul><li>Inserting and deleting elements from the Priority Queue: <br></li><ul><li>Each edge of the graph (suppose it is implemented as an adjacency list) can cause a single insertion and deletion from the priority queue, so we will be doing at worst <b>O(|</b><i><b>E</b></i><b>|)</b> priority queue insertions and deletions\u00a0<br></li><li>The insertion and deletion of a well-implemented priority queue with <i>N</i> elements\u00a0is O(log <i>N</i>). In Dijkstra's algorithm, our \"<i>N</i>\" is simply |<i>E</i>| in the worst case (because we will have added all |<i>E</i>| potential elements into the priority queue), and therefore,<i> for each element</i> we insert and delete from the priority queue, we have a worst-case time complexity of <b>O(log |<i>E</i>|)</b>. Thus, for <i>all</i>\u00a0of the |<i>E</i>|\u00a0elements, we have a worst-case time complexity of <b>O(|<i>E</i>| log |<i>E</i>|)</b></li></ul></ul><p>Taking into account all of the time complexities, the algorithm has an overall worst-case time complexity of <b>O(|<i>V</i>| +  |<i>E</i>| log |<i>E</i>|)</b>.<br></p><br></div></div>", "subtitle_files": [], "source": null, "animation": null, "video": null, "tests_archive": null, "options": {}, "subtitles": {}}, "time": "2016-09-05T17:10:41.168288"}