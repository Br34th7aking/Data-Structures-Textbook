{"block": {"feedback_wrong": "", "subtitles": {}, "animation": null, "name": "text", "text": "<p><span>We explored graphs and discussed some of their properties, and based on the previous exercises, we saw that it can be easy to interpret graphs when we can see them in their entirety. Also, we saw that we can solve some interesting real-world problems by simply exploring a graph. However, what happens when the number of </span><b><span class=\"wysiwyg-color-purple\">nodes</span></b><span> and/or </span><b><span class=\"wysiwyg-color-blue\">edges</span></b><span> becomes absurdly large, to the point that we can no longer just \"eyeball\" solutions?</span><br></p><p>Because real-world graphs can blow up in size, before we can even begin to worry about graph exploration algorithms, we need to think about how we can represent graphs on a computer so that any graph exploration algorithms we come up with can be implemented and executed on these real-world datasets. In the next section, we will discuss various methods to represent graphs and we will analyze the trade-offs of each type of representation.</p>", "tests_archive": null, "source": null, "subtitle_files": [], "options": {}, "feedback_correct": "", "video": null}, "id": "112172", "time": "2016-09-06T23:45:22.736523"}