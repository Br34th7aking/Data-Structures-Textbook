{"block": {"tests_archive": "/api/step-sources/122171/tests", "feedback_correct": "", "subtitle_files": [], "text": "<p><b><span class=\"wysiwyg-color-green\">CODE CHALLENGE:</span></b> Using the C++ random number generator <span class=\"wysiwyg-font-tt\">rand()</span>, implement a <b>biased coin</b> that outputs <b>1 with probability\u00a0<i>p</i></b> and\u00a0<b>0 with probability 1\u2013<i>p</i></b>.\u00a0<b>Do\u00a0<i>not</i> seed the random number generator within the function you will be implementing!</b> We will seed the random number generator for you.<br></p><p><b><span class=\"wysiwyg-color-red\">Hint:</span></b> If you need help using <span class=\"wysiwyg-font-tt\">rand()</span>, either refer to the <a href=\"http://www.cplusplus.com/reference/cstdlib/rand/\" rel=\"nofollow\">C++ Reference</a>, or look at the examples on the previous step.<br></p><p><b><span class=\"wysiwyg-color-red\">Note:</span></b> In the Sample Input, the 1 on the top line represents how many times we will run your code. It is for grading purposes, so please ignore it. The bottom line is <i>p</i>\ufeff.<br></p>", "feedback_wrong": "", "options": {"samples": [["1\n0.7", "1"]], "limits": {"c++11": {"memory": 256, "time": 5}}, "execution_time_limit": 5, "code_templates": {"c++11": "unsigned int flipCoin(float p) {\n    /* YOUR CODE HERE */\n}"}, "execution_memory_limit": 256}, "subtitles": {}, "name": "code", "source": {"is_time_limit_scaled": true, "is_memory_limit_scaled": true, "templates_data": "::c++11\n::header\n#include <stdlib.h>     // srand, rand\n#include <time.h>       // time\n#include <iostream>     // cout, cin\nusing namespace std;\n\n::code\nunsigned int flipCoin(float p) {\n    /* YOUR CODE HERE */\n}\n\n::footer\nint main() {\n    srand(time(NULL));\n    int n;\n    cin >> n;\n    float p;\n    cin >> p;\n    for(int i = 0; i < n; ++i) {\n        cout << flipCoin(p) << endl;\n    }\n    return 0;\n}", "samples_count": 1, "test_archive": [], "execution_time_limit": 5, "manual_memory_limits": [], "code": "import random\n\ndef generate():\n    return [\"1\\n0.7\",\"100000\\n\" + str(random.randrange(3,8)/10.0)]\n\n\ndef solve(dataset):\n    n,p = dataset.splitlines()\n    n = int(n)\n    p = float(p)\n    out = []\n    for _ in range(n):\n        if random.random() < p:\n            out.append(\"1\")\n        else:\n            out.append(\"0\")\n    return '\\n'.join(out)\n\n\ndef check(reply, clue):\n    clue = [int(i.strip()) for i in clue.strip().splitlines()]\n    n = len(clue)\n    if n == 1:\n        if reply.strip() in \"01\":\n            return 1\n        else:\n            return 0,\"You returned an invalid value: \" + reply\n    p = round(sum(clue)/float(n),1)\n    reply = [int(i.strip()) for i in reply.strip().splitlines()]\n    replyP = sum(reply)/float(n)\n    if abs(replyP - p) > 0.005:\n        return 0,\"Your die had p = \" + str(replyP) + \" when the true p = \" + str(p)\n    else:\n        return 1", "manual_time_limits": [], "execution_memory_limit": 256}, "video": null, "animation": null}, "time": "2016-09-11T01:04:49.562654", "id": "122171"}