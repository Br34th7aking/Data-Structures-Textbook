{"block": {"tests_archive": null, "feedback_correct": "", "subtitle_files": [], "text": "<p>We hope that you are now comfortable with\u00a0<b>random number generation</b> in general as well as in C++ specifically. Also, we hope you now understand the distinction between\u00a0<b><span class=\"wysiwyg-color-green\">true</span> random numbers</b>\u00a0(truly random, but can only be generated by harvesting natural entropy, which is\u00a0<i>slow</i>)\u00a0and\u00a0<b><span class=\"wysiwyg-color-red\">pseudo</span>-random numbers</b>\u00a0(seemingly random, but deterministic upon the seed, but can be generated\u00a0<i>very quickly</i>). Also, remember that you can combine these two\u00a0<b>random number generation</b> approaches by using a\u00a0<b><span class=\"wysiwyg-color-green\">true</span> random number</b> to\u00a0<i>seed</i> a\u00a0<b><span class=\"wysiwyg-color-red\">pseudo</span>-random number generator</b>.</p><p>No matter what problem you are trying to solve, if you need to generate a random number in some certain range, or if you need to sample from some distribution, or if you need to do something possibly even more fancy, rest assured that any of these tasks can be broken down into sampling random integers.</p><p>Later in this text, we will come back to\u00a0<b>random number generation</b> as it applies to the various\u00a0<b>Randomized Data Structures</b>\ufeff we will be discussing.</p>", "feedback_wrong": "", "options": {}, "subtitles": {}, "name": "text", "source": null, "video": null, "animation": null}, "time": "2016-09-11T01:04:50.389117", "id": "122170"}