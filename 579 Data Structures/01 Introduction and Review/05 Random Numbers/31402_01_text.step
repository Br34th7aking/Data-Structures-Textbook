{"block": {"feedback_wrong": "", "subtitles": {}, "animation": null, "name": "text", "text": "<p>The phenomenon of <i>randomness</i> has had numerous applications throughout history, including being used in dice games (as early as the 3,000s BCE in Mesopotamia), coin-flips (which originally were interpreted as the expression of divine will and were later used in games and decision-making), the shuffling of playing cards (which were used in divination as well as in games), and countless other applications.</p><p>To Computer Scientists,\u00a0<i>randomness</i> is essential to a special class of algorithms known as <b>Randomized Algorithms</b>: algorithms that employ a degree of randomness as part of their logic.\u00a0<b>Randomized Algorithms</b> can be broken down into two classes of algorithms:\u00a0<b>Las Vegas Algorithms</b>, which use\u00a0the random input to reduce the expected running time or memory usage but are guaranteed to terminate with a correct result, and\u00a0<b>Monte Carlo Algorithms</b>, which\u00a0have a chance of producing an incorrect result (but hopefully perform \"pretty well\" on average).</p><p>In the context of data structures specifically,\u00a0<i>randomness</i> is essential to a special class of data structures known as\u00a0<b>Randomized Data Structures</b>, which are data structures that incorporate some form of random input to determine their structure and data organization, which in turn effects their performance in finding, inserting, and removing elements.</p><p>For all of the applications listed above, we used the vague term\u00a0<i>randomness</i>, but we can be more concrete and specify that these are all applications of\u00a0<b>random number generation</b>. For example, rolling a\u00a0<i>k</i>-sided dice can be considered equivalent to generating a random number from 1 to\u00a0<i>k</i>, flipping a coin can be considered equivalent to generating a random number that can only be 0 or 1, etc. Even with\u00a0<b>Randomized Algorithms</b> and\u00a0<b>Randomized Data Structures</b>, any applied randomness can be broken down into randomly generating numbers.</p><p>In this section, we will discuss computational methods of\u00a0<b>random number generation</b>\ufeff.</p>", "tests_archive": null, "source": null, "subtitle_files": [], "options": {}, "feedback_correct": "", "video": null}, "id": "121896", "time": "2016-09-06T23:40:49.432722"}