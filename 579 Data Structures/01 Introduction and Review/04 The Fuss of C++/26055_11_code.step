{"id": "95904", "block": {"subtitles": {}, "source": {"samples_count": 1, "manual_time_limits": [], "manual_memory_limits": [], "execution_time_limit": 5, "is_memory_limit_scaled": true, "execution_memory_limit": 256, "is_time_limit_scaled": true, "templates_data": "::c++11\n::header\n#include <iostream>\n#include <vector>\nusing namespace std;\n\n::code\nvector<int> createVector(int n) {\n    // YOUR CODE HERE\n}\n\n\n::footer\nint main() {\n    int n;\n    cin >> n;\n    vector<int> vec = createVector(n);\n    for(int i : vec) {\n        cout << i << \" \";\n    }\n    return 0;\n}", "code": "import random\n\ndef generate():\n    num_tests = 10\n    tests = [('10',('10',solve('10')))]\n    for test in range(num_tests):\n        n = str(random.randint(0,1000))\n        tests.append((n,(n,solve(n))))\n    return tests\n\n\ndef solve(dataset):\n    return ' '.join([str(i) for i in range(1,int(dataset)+1)])\n\n\ndef check(reply, clue):\n    test = clue[0]\n    clue = clue[1]\n    if reply.strip() == clue.strip():\n        return 1\n    else:\n        return 0, \"Wrong answer\\n\\nInput:\\n\" + clue + \"\\n\\nYour output:\\n\" + reply + \"\\n\\nCorrect output:\\n\" + clue", "test_archive": []}, "video": null, "feedback_wrong": "", "options": {"limits": {"c++11": {"memory": 256, "time": 5}}, "execution_time_limit": 5, "samples": [["10", "1 2 3 4 5 6 7 8 9 10"]], "execution_memory_limit": 256, "code_templates": {"c++11": "vector<int> createVector(int n) {\n    // YOUR CODE HERE\n}"}}, "animation": null, "text": "\n\n<p><b><span class=\"wysiwyg-color-green\">CODE CHALLENGE:</span></b>\u00a0<b>\ufeffCreating a Vector</b></p><p>Given an integer <i>n</i>, create a new vector, add all of the numbers from 1 to <i>n</i> (inclusive) to the vector, and then return the vector.<br></p>\n\n", "feedback_correct": "", "tests_archive": "/api/step-sources/95904/tests", "subtitle_files": [], "name": "code"}, "time": "2016-09-03T01:05:32.732641"}