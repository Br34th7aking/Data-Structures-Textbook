{"id": "95882", "time": "2016-09-01T21:45:58.304925", "block": {"subtitle_files": [], "feedback_wrong": "", "options": {"execution_memory_limit": 256, "limits": {"c++11": {"memory": 256, "time": 5}}, "execution_time_limit": 5, "samples": [["10", "1 2 3 4 5 6 7 8 9 10"]], "code_templates": {"c++11": "void printNums(int n) {\n    // YOUR CODE HERE\n}"}}, "name": "code", "subtitles": {}, "tests_archive": "/api/step-sources/95882/tests", "source": {"execution_memory_limit": 256, "templates_data": "::c++11\n::header\n#include <iostream>\nusing namespace std;\n\n::code\nvoid printNums(int n) {\n    // YOUR CODE HERE\n}\n\n::footer\nint main() {\n    int n;\n    cin >> n;\n    printNums(n);\n    return 0;\n}", "code": "import random\n\ndef generate():\n    num_tests = 10\n    tests = [('10',('10',solve('10')))]\n    for test in range(num_tests):\n        n = str(random.randint(0,1000))\n        tests.append((n,(n,solve(n))))\n    return tests\n\n\ndef solve(dataset):\n    return ' '.join([str(i) for i in range(1,int(dataset)+1)])\n\n\ndef check(reply, clue):\n    test = clue[0]\n    clue = clue[1]\n    if reply.strip() == clue.strip():\n        return 1\n    elif ' ' not in reply:\n        return 0, \"Did you forget to delimit the numbers using the space character?\"\n    else:\n        return 0#, \"Wrong answer\\nInput:\\n\" + test + \"\\nYour output:\\n\" + reply + \"\\nCorrect output:\\n\" + clue", "is_time_limit_scaled": true, "manual_memory_limits": [], "manual_time_limits": [], "execution_time_limit": 5, "test_archive": [], "is_memory_limit_scaled": true, "samples_count": 1}, "text": "<p>\n\nAs mentioned before, since we are learning about data structures and thus want to place an emphasis on speed, everything in this text will be done in C++. If you are already comfortable with C++, you don't need much preparation, if any, language-wise. However, if you are <i>not</i>\ufeff already comfortable with C++, this text assumes that you are at least comfortable with Java. As such, this section highlights the key differences one would need to know to transition from Java to C++. First, just to refresh basic syntax tasks, solve the simple challenge below.</p><p><b><span class=\"wysiwyg-color-green\">CODE CHALLENGE:</span></b>\u00a0<b>Basic Syntax Refresher</b></p><p>Given an integer\u00a0<i>n</i>, print all of the numbers from 1 to\u00a0<i>n</i> (inclusive) to standard output, separated by spaces. If you are completely unfamiliar with C++ syntax, you may want to attempt this code challenge after completing the rest of this section.</p>", "feedback_correct": "", "video": null, "animation": null}}