{"id": "116969", "block": {"feedback_correct": "", "name": "text", "feedback_wrong": "", "text": "<p>The last class of computational problems we will discuss is\u00a0<b><span class=\"wysiwyg-color-purple\">NP-Complete</span></b>, which is simply the intersection between\u00a0<b><span class=\"wysiwyg-color-blue\">NP</span></b> and\u00a0<b><span class=\"wysiwyg-color-red\">NP-Hard</span></b>. In other words, an\n\n<b><span class=\"wysiwyg-color-red\">NP</span></b><b><span class=\"wysiwyg-color-red\">-Hard</span></b>\n\n problem is considered\u00a0<b><span class=\"wysiwyg-color-purple\">NP-Complete</span></b> if it can be verified in polynomial time (i.e., it is also in <b><span class=\"wysiwyg-color-blue\">NP</span></b>).</p><p>One interesting\u00a0<b><span class=\"wysiwyg-color-purple\">NP-Complete</span></b> problem is the \"Boolean Satisfiability Problem\", which is the basis of modern encryption. When we encrypt sensitive data, we feel safe because, without knowing the encryption key, a malicious person would need to solve the \"Boolean Satisfiability Problem\" to be able to forcefully decrypt our data, which is unfeasible because of the hardness of the problem.</p><p><b><span class=\"wysiwyg-color-red\">STOP and Think:</span></b> The \"Boolean Satisfiability Problem\", the basis of modern encryption, is\u00a0<b><span class=\"wysiwyg-color-purple\">NP-Complete</span></b>, meaning it is both\u00a0<b><span class=\"wysiwyg-color-red\">NP-Hard</span></b>\u00a0<i>and</i>\u00a0<b><span class=\"wysiwyg-color-blue\">NP</span></b>. If someone were to find a polynomial-time solution to\u00a0<i>any</i>\u00a0<b><span class=\"wysiwyg-color-red\">\ufeffNP-Hard</span></b><span class=\"wysiwyg-color-red\"></span> problem, what would be the repercussions to data encryption?<br></p>", "subtitle_files": [], "source": null, "animation": null, "video": null, "tests_archive": null, "options": {}, "subtitles": {}}, "time": "2016-09-07T23:32:24.752201"}