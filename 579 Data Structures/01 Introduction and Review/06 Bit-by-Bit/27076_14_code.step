{"id": "112156", "time": "2016-09-01T21:46:26.620752", "block": {"subtitle_files": [], "feedback_wrong": "", "options": {"execution_memory_limit": 256, "limits": {"c++11": {"memory": 256, "time": 5}}, "execution_time_limit": 5, "samples": [["126 1", "254"]], "code_templates": {"c++11": "unsigned char setLeftBit(unsigned char input, unsigned int bit) {\n    // YOUR CODE HERE\n}"}}, "name": "code", "subtitles": {}, "tests_archive": "/api/step-sources/112156/tests", "source": {"execution_memory_limit": 256, "templates_data": "::c++11\n::header\n#include <iostream>\n#include <set>\n#include <string>\nusing namespace std;\n\nunsigned char setLeftBit(unsigned char input, unsigned int bit);\n\nint main() {\n    unsigned int byte;\n    unsigned int bit;\n    cin >> byte;\n    cin >> bit;\n    cout << (int)setLeftBit((unsigned char)byte, bit);\n    return 0;\n}\n\n::code\nunsigned char setLeftBit(unsigned char input, unsigned int bit) {\n    // YOUR CODE HERE\n}", "samples_count": 1, "manual_memory_limits": [], "is_time_limit_scaled": true, "manual_time_limits": [], "execution_time_limit": 5, "test_archive": [], "is_memory_limit_scaled": true, "code": "import random\n\ndef generate():\n    num_tests = 10\n    tests = [('126 1',('126 1',solve('126 1')))]\n    for test in range(num_tests):\n        n = str(random.randint(0,255))\n        b = str(random.randint(0,1))\n        t = str(n) + ' ' + str(b)\n        tests.append((t,(t,solve(t))))\n    return tests\n\n\ndef solve(dataset):\n    byte,bit = dataset.split(' ')\n    byte = int(byte)\n    bit = int(bit)\n    return str((byte & (~(1 << 7))) | (bit << 7))\n\n\ndef check(reply, clue):\n    test = clue[0]\n    clue = clue[1]\n    if int(reply) == int(clue):\n        return 1\n    elif test == '126 1':\n        return 0\n    else:\n        return 0, \"Wrong answer\\nInput:\\n\" + test + \"\\nYour output:\\n\" + reply + \"\\nCorrect output:\\n\" + clue"}, "text": "<p><b><span class=\"wysiwyg-color-green\">Code Challenge:</span> Setting the Leftmost Bit</b></p><p>You will need to fill in the body of setLeftBit(). The input will be a byte (8 bits) <i>input</i>\u00a0and a single bit <i>bit</i>, and you will need to set the leftmost bit of <i>input</i> to\u00a0<i>bit</i> and return the result.</p>", "feedback_correct": "", "video": null, "animation": null}}