{"id": "112158", "block": {"feedback_correct": "", "name": "code", "feedback_wrong": "", "text": "<p><b><span class=\"wysiwyg-color-green\">Code Challenge:</span> Extracting the Rightmost Bit</b></p><p>You will need to fill in the body of extractRightBit(). The input will be a byte (8 bits) <i>input</i>, and you will need to return the rightmost bit of <i>input</i>\u00a0(either a 1 or a 0).</p>", "subtitle_files": [], "source": {"execution_time_limit": 5, "code": "import random\n\ndef generate():\n    num_tests = 10\n    tests = [('126',('126',solve('126')))]\n    for test in range(num_tests):\n        n = str(random.randint(0,255))\n        tests.append((n,(n,solve(n))))\n    return tests\n\n\ndef solve(dataset):\n    return str(int(dataset.strip()) & 1);\n\n\ndef check(reply, clue):\n    test = clue[0]\n    clue = clue[1]\n    if int(reply) == int(clue):\n        return 1\n    elif test == '126':\n        return 0\n    else:\n        return 0, \"Wrong answer\\nInput:\\n\" + test + \"\\nYour output:\\n\" + reply + \"\\nCorrect output:\\n\" + clue", "samples_count": 1, "execution_memory_limit": 256, "manual_memory_limits": [], "templates_data": "::c++11\n::header\n#include <iostream>\n#include <set>\n#include <string>\nusing namespace std;\n\nunsigned int extractRightBit(unsigned char input);\n\nint main() {\n    unsigned int byte;\n    cin >> byte;\n    cout << extractRightBit((unsigned char)byte);\n    return 0;\n}\n\n::code\nunsigned int extractRightBit(unsigned char input) {\n    // YOUR CODE HERE\n}", "is_memory_limit_scaled": true, "is_time_limit_scaled": true, "manual_time_limits": [], "test_archive": []}, "animation": null, "video": null, "tests_archive": "/api/step-sources/112158/tests", "options": {"execution_time_limit": 5, "execution_memory_limit": 256, "code_templates": {"c++11": "unsigned int extractRightBit(unsigned char input) {\n    // YOUR CODE HERE\n}"}, "limits": {"c++11": {"time": 5, "memory": 256}}, "samples": [["126", "0"]]}, "subtitles": {}}, "time": "2016-09-02T19:32:45.106153"}