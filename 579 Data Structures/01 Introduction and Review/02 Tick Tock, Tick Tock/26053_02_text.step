{"time": "2016-09-05T12:22:32.160453", "block": {"tests_archive": null, "animation": null, "feedback_correct": "", "subtitles": {}, "source": null, "text": "<p>In the world of mathematics, a solution is typically either correct or incorrect, and all correct solutions are typically equally \"good\". In the world of algorithms, however, this is certainly not the case: even if two algorithms produce identical solutions for a given problem, there is the possibility that one algorithm is \"better\" than the other.</p><p>In the aforementioned film, the initial version of Turing's Enigma-cracking machine would indeed produce the correct solution if given enough time to run, but because the Nazis would change the encryption cipher every 24 hours, the machine would only be useful if it were able to complete the decryption process far quicker than this. However, at the end of the movie, Turing updates the machine to omit possible solutions based on knowledge of the unchanging greeting appearing at the end of each message. After this update, the machine is able to successfully find a solution fast enough to be useful to the British intelligence agency.</p><p>What Turing experienced can be described by\u00a0<b>time complexity</b>, a way of quantifying the time taken by an algorithm to run as a function of its input size by effectively counting the number of elementary operations performed by the algorithm. Essentially, the time complexity of a given algorithm tells us roughly how fast the algorithm performs as the input size grows.</p><p><img src=\"https://ucarecdn.com/0cf517b0-ce49-4228-8246-07f4ff81d62e/-/crop/410x394/0,0/-/preview/\" alt=\"\"></p><p class=\"wysiwyg-text-align-center\"><b>Figure:</b>\ufeff A World War II Nazi \"Enigma\" machine<br></p>", "options": {}, "subtitle_files": [], "name": "text", "video": null, "feedback_wrong": ""}, "id": "95850"}