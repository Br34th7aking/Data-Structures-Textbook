{"id": "123394", "block": {"name": "text", "feedback_correct": "", "animation": null, "subtitle_files": [], "video": null, "feedback_wrong": "", "options": {}, "source": null, "text": "<p>So how do we take into consideration the concerns above to transform the   <span class=\"wysiwyg-color-black\"><b><span class=\"wysiwyg-color-green\">B-Tree</span></b></span> structure into a more useful structure to implement large data sets? <br></p><ol><li>If we are worried about having to traverse nodes filled with other database entries before reaching the <i>single</i> database entry we queried, then how about we store the actual full database entries <i>only</i> at the leaves? In order to still be able to traverse the tree however, our keys above the leaves would be kept to storing <i>only</i> the single field we used to <i>sort</i> the data records. That way, we get to traverse <i>smaller</i>\n nodes to reach the query. By having less data to traverse, we would \nthus be increasing our chances that the smaller nodes are stored <i>closer to each other</i> in memory, thereby making it more likely that they are in a <i>closer section of memory</i>, such as the L1 Cache  (remember, this is because the CPU determines which data to put in closer sections of memory largely based on<i><b> spatial</b></i>\n locality). By having the keys be in a closer section of memory, it will\n thus take less time to access the queried database entry. <br></li><li>Now\n that we have all the full data records guaranteed to be at the leaves, \nlet's take advantage of this situation to create an easier way to read \nall the data entries <i>without</i> having to traverse up and down the \ntree; let's link together all the leaf nodes (i.e., implement the leaf \nnodes as a linked list)! That way, we can just do a linear scan of our \nleaf nodes to read <i>all</i> of our database entries.<br></li></ol>In practice, the implementation of the two ideas above in the   <span class=\"wysiwyg-color-black\"><b><span class=\"wysiwyg-color-green\">B-Tree</span></b></span> structure produces a variant structure called the <b><span class=\"wysiwyg-color-purple\">B+-Tree</span></b>. Let's look at the next step to see how a <b><span class=\"wysiwyg-color-purple\">B+-Tree</span></b> actually looks. ", "subtitles": {}, "tests_archive": null}, "time": "2016-09-15T15:01:31.606414"}