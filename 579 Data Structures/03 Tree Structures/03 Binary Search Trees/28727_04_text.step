{"block": {"animation": null, "source": null, "text": "<p>Below is pseudocode for the basic <b><span class=\"wysiwyg-color-green\">BST</span></b> functions. They should be somewhat intuitive given the structure of a <b><span class=\"wysiwyg-color-green\">BST</span></b>. In these examples, we assume that a <b><span class=\"wysiwyg-color-green\">BST</span></b> object has two global variables: the <i>root node</i> (<span class=\"wysiwyg-font-tt\">root</span>), and an integer keeping track of the <i>size</i> of the BST (<span class=\"wysiwyg-font-tt\">size</span>). Note that pseudocode only represents the logic behind the algorithms, and when you actually implement these functions, you may need to do worry about language-specific things (e.g. syntax, memory management).</p><p></p><pre><code class=\"cpp\"><b>find(element): <span class=\"wysiwyg-color-red\">// returns True if element exists in BST, otherwise returns False</span></b>\n    current = root                 <span class=\"wysiwyg-color-red\">// start at the root</span>\n    while current != element:\n        if element &lt; current:      <span class=\"wysiwyg-color-red\">// if element &lt; current, traverse left</span>\n            current = current.leftChild\n        else if element &gt; current: <span class=\"wysiwyg-color-red\">// if element &gt; current, traverse right</span>\n            current = current.rightChild\n        if current == NULL:        <span class=\"wysiwyg-color-red\">// if we traversed and there was no such child, failure</span>\n            return False\n    return True <span class=\"wysiwyg-color-red\">// we only reach here if current == element, which means we found element</span></code></pre><p></p><pre><code class=\"cpp\"><b>insert(element): <span class=\"wysiwyg-color-red\">// inserts element into BST and returns True on success (or False on failure)</span></b>\n    current = root                         <span class=\"wysiwyg-color-red\">// start at the root</span>\n    while current != element:\n        if element &lt; current:\n\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003if current.leftChild == NULL:  <span class=\"wysiwyg-color-red\">// if no left child exists, insert element as left child</span>\n\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003current.leftChild = element\n\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003return True\n\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003else:                          <span class=\"wysiwyg-color-red\">// if a left child does exist, traverse left</span>\n            \u2003\u2003\u2003\u2003current = current.leftChild\n        else if element &gt; current:\n\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003if current.rightChild == NULL: <span class=\"wysiwyg-color-red\">// if no right child exists, insert element as right child</span>\n\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003current.rightChild = element\n\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003return True\n\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003else:                          <span class=\"wysiwyg-color-red\">// if a right child does exist, traverse right</span>\n            \u2003\u2003\u2003 current = current.rightChild\n    return False <span class=\"wysiwyg-color-red\">// we only reach here if current == element, and we can't have duplicate elements</span></code></pre><p></p><pre><code class=\"cpp\"><b>size(): <span class=\"wysiwyg-color-red\">// returns the number of elements in BST</span></b>\n    return size</code></pre><p></p><p></p><pre><code class=\"cpp\"><b>clear(): <span class=\"wysiwyg-color-red\">// clears BST</span></b>\n    root = NULL\n    size = 0</code></pre><p></p><p></p><pre><code class=\"cpp\"><b>empty(): <span class=\"wysiwyg-color-red\">// returns True if BST is empty, otherwise returns False</span></b>\n    if size == 0:\n        return True\n    else:\n        return False</code></pre>", "feedback_correct": "", "feedback_wrong": "", "video": null, "name": "text", "subtitles": {}, "subtitle_files": [], "options": {}, "tests_archive": null}, "id": "110102", "time": "2016-09-20T01:09:34.369552"}