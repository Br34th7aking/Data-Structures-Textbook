{"id": "120942", "block": {"feedback_correct": "", "name": "text", "feedback_wrong": "", "text": "<p>The insertion and removal algorithms for the\u00a0<b><span class=\"wysiwyg-color-red\">Red-Black Tree</span></b>\u00a0are a bit tricky because there are so many properties we need to keep track of. With the\u00a0<b><span class=\"wysiwyg-color-purple\">AVL Tree</span></b>, we had one restructuring tool at our disposal: <b>AVL rotations</b>. Now, we have two tools at our disposal:\u00a0<b>AVL rotations</b> <i>and</i>\u00a0<b>node recoloring</b> (i.e., changing a <b>black</b> node's color to <b><span class=\"wysiwyg-color-red\">red</span></b>, or a\u00a0<b><span class=\"wysiwyg-color-red\">red</span></b> node's color to\u00a0<b>black</b>).</p><p>Before continuing with the\u00a0<b><span class=\"wysiwyg-color-red\">Red-Black Tree</span></b> algorithms,\u00a0we want to first refresh your memory with regard to\u00a0<b>AVL Rotations</b> because they are somewhat non-trivial.</p><p>Recall that\u00a0<b>AVL Rotations</b> can be done in two directions: <b>right</b> or <b>left</b>. Below is a diagram generalizing both right and left AVL Rotations. In the diagram, the triangles represent arbitrary subtrees of any shape: they can be empty, small, large, etc. The circles are the \"important\" nodes upon which we are performing the rotation.</p><p><img alt=\"\" src=\"https://ucarecdn.com/b914f856-4d54-4cc1-91f6-4a603a18802f/\"></p>", "subtitle_files": [], "source": null, "animation": null, "video": null, "tests_archive": null, "options": {}, "subtitles": {}}, "time": "2016-09-05T17:09:16.687838"}