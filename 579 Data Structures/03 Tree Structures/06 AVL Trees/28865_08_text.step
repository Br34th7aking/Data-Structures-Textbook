{"id": "120849", "block": {"feedback_correct": "", "name": "text", "feedback_wrong": "", "text": "<p>As you may have noticed in the previous step, the simple AVL rotation we learned fails to fix the balance of the tree:</p><p><span class=\"image-wrapper\"><img title=\"Image: https://ucarecdn.com/6b1058ad-6c61-4a6c-b88b-271389cbda81/\" src=\"https://ucarecdn.com/6b1058ad-6c61-4a6c-b88b-271389cbda81/\" alt=\"\"></span></p><p>To combat this problem, we will introduce the\u00a0<b>double rotation</b>, which is simply a series of two AVL rotations that will be able to fix the tree's balance. The issue comes about when we have a \"kink\" in the shape with respect to what exactly went out of balance. Contrast the above tree with the trees on the previous step, which were also out of balance, but which looked like a \"straight line\" as opposed to a \"kink\".</p><p>The solution to our problem (a double rotation) is actually quite intuitive: we have a method that works on nodes that are in a straight line (a single rotation), so our solution to kinks is to first perform one rotation to\u00a0<i>transform</i> our problematic kink\u00a0<i>into</i> the straight line case, and then we can simply perform another rotation to solve the straight line case.</p><p>Below is the correct way to rebalance this tree (where 2 is the node we inserted into the tree):</p><p><span class=\"image-wrapper\"><img title=\"Image: https://ucarecdn.com/5fdc3547-c65f-4750-8797-97a469397be5/\" src=\"https://ucarecdn.com/5fdc3547-c65f-4750-8797-97a469397be5/\" alt=\"\"></span></p>", "subtitle_files": [], "source": null, "animation": null, "video": null, "tests_archive": null, "options": {}, "subtitles": {}}, "time": "2016-09-02T19:35:12.360316"}