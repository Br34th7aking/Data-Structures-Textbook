{"id": "110141", "block": {"feedback_correct": "", "name": "text", "feedback_wrong": "", "text": "<p>Recall from the previous step that, if we can solve\u00a0$ D(n) $, our \n\nanswer, the expected depth of a <b><span class=\"wysiwyg-color-green\">BST</span></b> with <i>n</i> nodes, will\nsimply be\u00a0$ \\frac{1}{n} D(n) $. Instead of brute-forcing the solution, let's define it as a recurrence relation. Define\u00a0$ D(n|i) $\u00a0as the expected total depth of a <b><span class=\"wysiwyg-color-green\">BST</span></b> with\u00a0<i>n</i> nodes given that there are\u00a0<i>i</i> nodes in its left subtree (and therefore,\u00a0<i>n</i>-<i></i><i>i</i>-1 nodes in its right subtree). Below is a general example of such a <b><span class=\"wysiwyg-color-green\">BST</span></b>:</p><p><img src=\"https://ucarecdn.com/d49445f4-d926-4c87-b844-b3051ec5c9ac/\" alt=\"\"></p><p>If we want to rewrite\u00a0$ D(n|i) $\u00a0in terms of\u00a0$ D(i) $\u00a0and\u00a0$ D(n-i-1) $, we can note that the resulting tree will have all of the depths of the left subtree, all of the depths of the right subtree, and a depth for the root. However, note that every node in the left subtree and every node in the right subtree will now have 1 greater depth, because each node in the two subtrees now has a new ancestor. Thus,\u00a0$ D(n|i)=D(i)+D(n-i-1)+i+(n-i-1)+1=D(i)+D(n-i-1)+n $. Note that\u00a0<i>i</i> can be at minimum 0 (because you can have at minimum 0 nodes in your left subtree) and at most\u00a0<i>n</i>-1 (because we have a root \u00a0node, so at most, the other\u00a0<i>n</i>-1 nodes can be in the left subtree).</p><p>Let\u00a0$ P_n(i) $\u00a0denote the probability that a <b><span class=\"wysiwyg-color-green\">BST</span></b> with\u00a0<i>n</i> nodes has exactly\u00a0<i>i</i> nodes in its left subtree (i.e., the probability of having the tree shown above). With basic probability theory, we can see that\u00a0$ D(n)=\\sum_{i=0}^{n-1}{D(n|i) P_n(i)} $. Recall, however, that by definition of a <b><span class=\"wysiwyg-color-green\">BST</span></b>, the left subtree of the root contains all of the elements that are smaller than the root. Therefore, if there are\u00a0<i>i</i> elements to the left of the root, the root must have been the (<i>i</i>+1)-th smallest element of the dataset. Also recall that, also by definition of a <b><span class=\"wysiwyg-color-green\">BST</span></b>, the root is simply the first element inserted into the <b><span class=\"wysiwyg-color-green\">BST</span></b>. Therefore,\u00a0$ P_n(i) $\u00a0is simply the probability that, out of\u00a0<i>n</i> elements total, we happened to insert the\u00a0<i></i>(<i></i><i>i</i>+1)-th smallest element first. Because of assumption 2, which says that all insertion orders are equally probable (and thus all of the <i>n</i> elements are equally likely to be inserted first),\u00a0$ P_n(i)=\\frac{1}{n} $, so\u00a0$ D(n)=\\sum_{i=0}^{n-1}{\\frac{1}{n} D(n|i)}=\\frac{1}{n} \\sum_{i=0}^{n-1}{[D(i)+D(n-i-1)+n] }$.</p><p>Therefore, \u00a0$  D(n)=\\frac{1}{n} \\sum_{i=0}^{n-1}{D(i)} + \\frac{1}{n} \\sum_{i=0}^{n-1}{D(n-i-1)} + n $\u00a0</p>", "subtitle_files": [], "source": null, "animation": null, "video": null, "tests_archive": null, "options": {}, "subtitles": {}}, "time": "2016-09-07T23:36:06.033237"}