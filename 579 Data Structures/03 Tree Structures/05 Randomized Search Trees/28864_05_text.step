{"id": "120135", "time": "2016-09-02T18:27:16.094298", "block": {"animation": null, "text": "<p>It turns out that we actually are able to \"bubble up\" a given node without destroying the\u00a0<b><span class=\"wysiwyg-color-green\">Binary Search Tree</span></b> properties of the tree via an operation called an\u00a0<b>AVL Rotation</b>. This operation was originally designed for the \"AVL Tree\" data structure, which we will cover extensively in a later section of the text, but we will borrow the operation for use with our <b><span class=\"wysiwyg-color-purple\">Treaps</span></b>.</p><p><b>AVL Rotations</b> can be done in two directions:\u00a0<b>right</b> or\u00a0<b>left</b>\ufeff. Below is a diagram generalizing both right and left AVL Rotations. In the diagram, the triangles represent arbitrary subtrees of any shape: they can be empty, small, large, etc. The circles are the \"important\" nodes upon which we are performing the rotation.<br></p><p><span class=\"image-wrapper\"><img title=\"Image: https://ucarecdn.com/b914f856-4d54-4cc1-91f6-4a603a18802f/\" src=\"https://ucarecdn.com/b914f856-4d54-4cc1-91f6-4a603a18802f/\"></span></p>", "options": {}, "feedback_correct": "", "source": null, "subtitle_files": [], "name": "text", "feedback_wrong": "", "subtitles": {}, "tests_archive": null, "video": null}}