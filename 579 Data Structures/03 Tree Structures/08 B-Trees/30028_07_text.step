{"block": {"video": null, "tests_archive": null, "feedback_correct": "", "animation": null, "text": "<p>Below is pseudocode more formally describing the\u00a0<b><span class=\"wysiwyg-color-green\">B-Tree</span></b> insertion algortithm. Note that the real code to implement insert is usually <i>very</i>\u00a0long because of the shuffling of keys and pointer manipulations that need to take place.</p><p></p><pre><code class=\"cpp\"><b>insert(key): // return true upon success</b>\n\n    // check for duplicate insertion (not allowed)\n    if key is already in tree:\n        return false\n    \n    node = the leaf node into which key must be inserted\n    insert key into node (maintain sorted order) and allocate space for children\n  \n    // while the extra key doesn't fit in the node, grow the tree\n    while node.size &gt; 2*b:\n        left,right = result of splitting node in half\n        parent = parent of node\n        remove largest key from left and insert into parent (maintain sorted order)\n        make left and right new children of parent\n        node = parent </code></pre><p></p><p>What is the worst-case time complexity for a <b><span class=\"wysiwyg-color-green\">B-Tree</span></b> insert operation? Well, since we have been analyzing the performance of a\u00a0 <b><span class=\"wysiwyg-color-green\">B-Tree</span></b> with respect to memory, we will choose to analyze\u00a0the worst-case time complexity with respect to memory as well (i.e., how much memory does the CPU need to access in order to insert a key). In the worst case, for each node, we need to read all the keys the node contains. Because the maximum number of keys we can store in a node is<i> </i>2<i>b</i>\u20131, the number of keys the CPU needs to read in a node becomes O(<i>b</i>). As mentioned before, the tree has a depth of\u00a0$O(\\log_{b}{n})$, making the <i>overall</i> worst-case time complexity become\u00a0$ O(b \\log_{b}{n})\u00a0 $.</p>", "subtitle_files": [], "subtitles": {}, "feedback_wrong": "", "name": "text", "source": null, "options": {}}, "id": "122876", "time": "2016-09-14T00:10:40.836829"}